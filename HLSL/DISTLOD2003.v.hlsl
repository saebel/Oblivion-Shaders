//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/DISTLOD2003.vso /Fcshaderdump19/DISTLOD2003.vso.dis
//
//
// Parameters:

float4 AlphaParam;
float4 AmbientColor;
float3 DiffuseColor;
float3 DiffuseDir;
float4 EyeDir;
float4 EyePos;
float4 FogColor;
float4 FogParam;
float4 InstanceData[2];
row_major float4x4 ModelViewProj;

// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float4 color_0 : COLOR0;
    float4 texcoord_0 : TEXCOORD0;
    float4 texcoord_1 : TEXCOORD1;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float4 color_0 : COLOR0;
    float2 texcoord_0 : TEXCOORD0;			// partial precision
    float4 texcoord_4 : TEXCOORD4_centroid;		// partial precision
    float4 texcoord_5 : TEXCOORD5_centroid;		// partial precision
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    const float4 const_6 = {-1, 0, 1, 0.01};

    float4 r0, r1, r2, r3, r4;
    float3 Diffusion;
    float4 InstanceProj, InstanceEye;
    float3 r5;
    float offset;

    r2.xyw = const_6;
    r5.xyz = r2.xxyw * EyeDir.xyxw;
    r0.xyz = r5;

    r0.x = dot(r5, r5);	// normalize + length
    r0.w = 1.0 / sqrt(r0.x);

    r1.xz = r0.w * -EyeDir.xyyw;
    r1.yw = r1.z * const_6.xxzy;
    r0.xyz = r1.zxww * const_6.xzzw;

    r1.x = dot(r1.yxww, r0);
    r0.w = 1.0 / sqrt(r1.x);

    r1.xy = r0 * r0.w;
    r0.w = r1.x;

    r2.x = dot(r0.wyzw, IN.position);
    r2.y = dot(r1.yzww, IN.position);
    r2.z = IN.position.z;

    offset = IN.texcoord_1.x;

    r0.w = r2.w * InstanceData[0 + offset].w;
    r0.xyz = (r0.w * r2) + InstanceData[0 + offset];
    r0.w = IN.position.w;

    r1 = frac(InstanceData[0 + offset]);
    r1.xyz = 2 * (r1 + -0.5);

    Diffusion = r1.w * IN.color_0 * dot(DiffuseDir, r1);

    InstanceEye = InstanceData[0 + offset];
    InstanceEye = EyePos - InstanceEye;

    InstanceProj.x = dot(ModelViewProj[0], r0);
    InstanceProj.y = dot(ModelViewProj[1], r0);
    InstanceProj.z = dot(ModelViewProj[2], r0);
    InstanceProj.w = dot(ModelViewProj[3], r0);

    OUT.position.xyzw = InstanceProj;

    float fdensity = min(max(     (FogParam.x   - length(InstanceProj)) / FogParam.y   , 0), 1);
    float adensity = min(max(1 - ((AlphaParam.x - length(InstanceEye )) / AlphaParam.y), 0), 1);

    adensity = ((AlphaParam.x < IN.position.w ? 1.0 : 0.0) * (1 - adensity));

    OUT.color_0.rgb = FogColor;
    OUT.color_0.a = 1 - fdensity;

    OUT.texcoord_0.xy = IN.texcoord_0;
    OUT.texcoord_4.xyz = (DiffuseColor * Diffusion) + AmbientColor;
    OUT.texcoord_4.w = 1;
    OUT.texcoord_5.xyz = 0;
    OUT.texcoord_5.w = 1 - adensity;

    return OUT;
};

// approximately 59 instruction slots used
