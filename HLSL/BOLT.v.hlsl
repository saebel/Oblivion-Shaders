//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/BOLT.vso /Fcshaderdump19/BOLT.vso.dis
//
//
// Parameters:

row_major float4x4 ModelViewProj;
float4 fVars0;
float4 fVars1;
float4 fVars2;
float4 SegmentData[2];

// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float4 color_1 : COLOR1;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float4 color_0 : COLOR0;
    float2 texcoord_0 : TEXCOORD0;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    const int4 const_7 = {-1, 1, 0, -2};
    float4 r0, r1, r2, r3, r4, r5, r6, r7;
    float2 loc0, loc1, loc2;
    float2 loc10, loc20;
    float2 loc10s, loc20s;
    float offset;

    /* TODO: int-type */
    r0.w = (IN.color_1.x >= fVars0.y ? 1.0 : 0.0);
    r2.w = (r0.w * -fVars0.y) + IN.color_1.x;
    r1.w = r2.w - 1;
    r3.xyz = const_7;

    offset = r2.w; r0 = (SegmentData[0 + offset].xyzx * r3.yyyz) + r3.zzzy;
    offset = r1.w; r1 = (SegmentData[0 + offset].xyzx * r3.yyyz) + r3.zzzy;
    offset = r2.w; r2 = (SegmentData[1 + offset].xyzx * r3.yyyz) + r3.zzzy;

    loc0.x = dot(ModelViewProj[0], r0);
    loc0.y = dot(ModelViewProj[1], r0);

    loc1.x = dot(ModelViewProj[0], r1);
    loc1.y = dot(ModelViewProj[1], r1);

    loc2.x = dot(ModelViewProj[0], r2);
    loc2.y = dot(ModelViewProj[1], r2);

    loc20 = loc2 - loc0;
    loc10 = loc1 - loc0;

    r2.xy = normalize(loc20);
    r1.xy = normalize(loc10) + r2;

    // cross2-product
    r1.w = (r1.x * r2.y) - (r1.y * r2.x);

    OUT.position.z = dot(ModelViewProj[2], r0);
    OUT.position.w = dot(ModelViewProj[3], r0);

    r0.w = (r1.w < 0 ? 1.0 : 0.0);
    r0.xy = r1 * r0.w;

    r7.y = pow(2.0, fVars0.z);	// partial precision
    r0.w = r7.y;
    r0.xy = (-2 * r0) + r1;

    r4.w = fVars0.z - r0.w;

    // dot2-product
    r1.xy = r0 * r0;
    r0.w = r1.y + r1.x;

    r1.w = 1.0 / r4.w;
    r6.w = r1.w * IN.color_1.x;
    r2.w = 1.0 / sqrt(r0.w);
    r0.w = max(-r6.w, r6.w);
    r0.xy = r0 * r2.w;

    r7.y = pow(2.0, r0.w);	// partial precision
    r5.w = r7.y;
    r0.w = (r6.w >= -r6.w ? 1.0 : 0.0);
    r3.w = r5.w + r5.w;
    r7.y = pow(2.0, r6.w);	// partial precision
    r2.w = r7.y;
    r0.w = (r0.w * r3.w) - r5.w;

    r1.w = (IN.color_1.x * r1.w) - r2.w;
    r1.w = (r1.w * fVars1.w) + fVars1.z;

    r3.w = r4.w * r0.w;
    r7.y = pow(2.0, r3.w);	// partial precision
    r2.w = r7.y;
    r0.w = (r0.w * r4.w) - r2.w;
    r3.w = r3.x + fVars1.y;
    r6.w = (r0.w >= r3.w ? 1.0 : 0.0);
    r5.w = (r0.w < fVars1.x ? 1.0 : 0.0);
    r2.w = r0.w * fVars2.x;
    r6.w = (r6.w * -r5.w) + 1;
    r3.w = (r2.w >= r3.w ? 1.0 : 0.0);
    r2.w = (r3.z < fVars2.x ? 1.0 : 0.0);
    r3.w = (r3.w * -r6.w) + r6.w;
    r2.w = r5.w * r2.w;
    r0.w = (r0.w >= r4.w ? 1.0 : 0.0);

    r2.w = (r2.w * -r3.w) + r3.w;
    r0.w = (r0.w * -r2.w) + r2.w;

    r1.w = r1.w * IN.position.x;

    OUT.position.xy = (r1.w * r0) + loc0;
    OUT.color_0.rgb = 1;
    OUT.color_0.a = r0.w * fVars2.y;
    OUT.texcoord_0 = IN.position;

    return OUT;
};

// approximately 73 instruction slots used
