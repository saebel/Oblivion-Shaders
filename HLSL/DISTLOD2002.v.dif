2c2
< // Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
---
> // Generated by Microsoft (R) D3DX9 Shader Compiler 5.04.00.2904
4c4
< //   vsa shaderdump19/DISTLOD2002.vso /Fcshaderdump19/DISTLOD2002.vso.dis
---
> //   fxc /Tvs_2_0 HLSL/DISTLOD2002.v.hlsl /FcHLSL/DISTLOD2002.v.asm
25,32c25,32
< //   DiffuseDir    c4       1
< //   DiffuseColor  c5       1
< //   EyePos        c9       1
< //   FogColor      c10      1
< //   FogParam      c11      1
< //   AlphaParam    c12      1
< //   AmbientColor  c13      1
< //   InstanceData  c20      2
---
> //   InstanceData  c4       2
> //   AlphaParam    c6       1
> //   AmbientColor  c7       1
> //   DiffuseColor  c8       1
> //   DiffuseDir    c9       1
> //   EyePos        c10      1
> //   FogColor      c11      1
> //   FogParam      c12      1
36c36
<     def c6, 0.00999999978, -0.5, 0, 1
---
>     def c13, 0.00999999978, -0.5, 0, 1
44,71c44,55
<     mov r0.w, c6.x
<     mul r0.w, r0.w, c20[a0.w].w
<     frc r1, c20[a0.w]
<     mad r0.xyz, v0, r0.w, c20[a0.w]
<     add r1.xyz, r1, c6.y
<     mov r0.w, v0.w
<     add r1.xyz, r1, r1
<     dp4 oPos.w, c3, r0			//		(c3.x * r0.x) + (c3.y * r0.y) + (c3.z * r0.z) + (c3.w * r0.w)
<     dp3 r2.x, c4, r1
<     mov r1.xyz, c20[a0.w]
<     add r1.xyz, -r1, c9
<     mul r2.xyz, r2.x, v1
<     mul r3.xyz, r1.w, r2
<     dp4 r2.x, c0, r0			//		(c0.x * r0.x) + (c0.y * r0.y) + (c0.z * r0.z) + (c0.w * r0.w)
<     dp4 r2.y, c1, r0			//		(c1.x * r0.x) + (c1.y * r0.y) + (c1.z * r0.z) + (c1.w * r0.w)
<     dp4 r2.z, c2, r0			//		(c2.x * r0.x) + (c2.y * r0.y) + (c2.z * r0.z) + (c2.w * r0.w)
<     mov r0.xyz, c5
<     mad oT4.xyz, r3, r0, c13
<     dp3 r0.x, r2, r2			//		(r2.x * r2.x) + (r2.y * r2.y) + (r2.z * r2.z)
<     mov oPos.xyz, r2
<     rsq r0.w, r0.x			//		1.0 / sqrt(r0)
<     rcp r0.w, r0.w			//		1.0 / (1.0 / sqrt(r0)) ^= sqrt(r0)
<     dp3 r0.x, r1, r1
<     add r2.w, -r0.w, c11.x		// exp fog	(off - r0)
<     rsq r0.w, r0.x
<     rcp r4.w, c11.y			// exp fog	(1 / div)
<     rcp r0.w, r0.w
<     add r1.w, r0.w, -c12.x
---
>     mov r0, c4[a0.w]
>     mul r1.w, r0.w, c13.x
>     mad r2.xyz, r1.w, v0, c4[a0.w]
>     mov r2.w, v0.w
>     dp4 r1.x, c0, r2
>     dp4 r1.y, c1, r2
>     dp4 r1.z, c2, r2
>     dp4 r1.w, c3, r2
>     dp4 r2.w, r1, r1
>     rsq r2.w, r2.w
>     rcp r2.w, r2.w
>     add r2.w, -r2.w, c12.x
73,82c57,82
<     mul r2.w, r2.w, r4.w		// exp fog	(off - r0) * (1 / div)
<     mad r1.w, r1.w, -r3.w, c6.w
<     max r2.w, r2.w, c6.z		// exp fog	max((off - r0) * (1 / div), 0.0)
<     max r1.w, r1.w, c6.z
<     min r2.w, r2.w, c6.w		// exp fog	min(max((off - r0) * (1 / div), 0.0), 1.0)
<     min r1.w, r1.w, c6.w
<     slt r0.w, c12.x, r0.w
<     add r1.w, r1.w, -c6.w
<     add oD0.w, -r2.w, c6.w		// exp fog	1.0 - min(max((off - r0) * (1 / div), 0.0), 1.0)
<     mad oT5.w, r0.w, r1.w, c6.w
---
>     mul r2.w, r2.w, r3.w
>     max r2.w, r2.w, c13.z
>     mov oPos, r1
>     min r1.w, r2.w, c13.w
>     add oD0.w, -r1.w, c13.w
>     add r1, -r0, c10
>     frc r0, c4[a0.w]
>     dp4 r1.w, r1, r1
>     add r1.xyz, r0, c13.y
>     rsq r1.w, r1.w
>     mul r0.xyz, r0.w, v1
>     rcp r0.w, r1.w
>     add r0.w, -r0.w, c6.x
>     rcp r1.w, c6.y
>     add r1.xyz, r1, r1
>     mad r0.w, r0.w, -r1.w, c13.w
>     dp3 r1.x, c9, r1
>     max r0.w, r0.w, c13.z
>     mul r1.xyz, r0, r1.x
>     min r0.w, r0.w, c13.w
>     add r1.w, -r0.w, c13.w
>     slt r0.w, c6.x, v0.w
>     mov r0.xyz, c8
>     mad oT4.xyz, r0, r1, c7
>     mad oT5.w, r0.w, -r1.w, c13.w
>     mov oD0.xyz, c11
84,86c84,85
<     mov oT4.w, c6.w
<     mov oT5.xyz, c6.z
<     mov oD0.xyz, c10			// exp fog
---
>     mov oT4.w, c13.w
>     mov oT5.xyz, c13.z
88c87
< // approximately 46 instruction slots used
---
> // approximately 45 instruction slots used
