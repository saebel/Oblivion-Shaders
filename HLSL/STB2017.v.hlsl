//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/STB2017.vso /Fcshaderdump19/STB2017.vso.dis
//
//
// Parameters:

float4 FogParam;
float4 LightPosition[3];
row_major float4x4 ModelViewProj;
row_major float4x4 ObjToCubeSpace;
float4 WindMatrices[16];

// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float4 texcoord_0 : TEXCOORD0;
    float4 blendindices : BLENDINDICES;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float4 texcoord_1 : TEXCOORD1;
    float4 texcoord_2 : TEXCOORD2;
    float4 fog : TEXCOORD3;
    float3 texcoord_6 : TEXCOORD6;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    /* +term: wind ------------------------------------------------------------- */
    float4 InstanceWind, InstanceProj;
    float offset = IN.blendindices.y;

    InstanceWind.x = dot(WindMatrices[0 + offset], IN.position);
    InstanceWind.y = dot(WindMatrices[1 + offset], IN.position);
    InstanceWind.z = dot(WindMatrices[2 + offset], IN.position);
    InstanceWind.w = dot(WindMatrices[3 + offset], IN.position);

    InstanceWind =                      InstanceWind  - IN.position;
    InstanceWind = (IN.blendindices.x * InstanceWind) + IN.position;

    InstanceProj.x = dot(ModelViewProj[0], InstanceWind);
    InstanceProj.y = dot(ModelViewProj[1], InstanceWind);
    InstanceProj.z = dot(ModelViewProj[2], InstanceWind);
    InstanceProj.w = dot(ModelViewProj[3], InstanceWind);

    OUT.position.xyzw = InstanceProj;

    /* +term: ??? -------------------------------------------------------------- */
    float4 InstanceObj;

    InstanceObj.x = dot(ObjToCubeSpace[0], InstanceWind);
    InstanceObj.y = dot(ObjToCubeSpace[1], InstanceWind);
    InstanceObj.z = dot(ObjToCubeSpace[2], InstanceWind);
    InstanceObj.w = dot(ObjToCubeSpace[3], InstanceWind);

    OUT.texcoord_1 = InstanceObj;
    OUT.texcoord_2 = LightPosition[0];
    OUT.texcoord_6.xyz = InstanceWind;

    /* +term: fog -------------------------------------------------------------- */
    float fdensity = min(max((FogParam.x - length(InstanceProj.xyz)) / FogParam.y, 0), 1);

    OUT.fog.rgb = 0;
    OUT.fog.a = 1 - fdensity;

    /* +term: copy ------------------------------------------------------------- */
    OUT.texcoord_0.xy = IN.texcoord_0;

    return OUT;
};

// approximately 32 instruction slots used
