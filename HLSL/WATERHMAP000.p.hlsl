//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATERHMAP000.pso /Fcshaderdump19/WATERHMAP000.pso.dis
//
//
// Parameters:

float Time;
sampler2D amplitudeSamp;
sampler2D freqSamp;

// Structures:

struct VS_OUTPUT {
    float2 texcoord_0 : TEXCOORD0;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	PI	3.14159274

    const float4 const_1 = {(1.0 / (PI * 2)), 0.5, PI * 2, -PI};

    float  f1 = tex2D(freqSamp, IN.texcoord_0);
    float4 a0 = tex2D(amplitudeSamp, IN.texcoord_0);

    float r1, r2, r3, r4;

    r2 =  f1 * Time.x;
    r1 = -f1 * Time.x;

    r2 = (r2 * const_1.x) + const_1.y;
    r1 = (r1 * const_1.x) + const_1.y;

    r2 = frac(r2);
    r1 = frac(r1);

    r3 = (r2 * const_1.z) + const_1.w;
    r4 = (r1 * const_1.z) + const_1.w;

    float2 f2, f0;

    f2.x = (a0.x * cos(r3)) - (a0.y * sin(r3));
    f2.y = (a0.x * sin(r3)) + (a0.y * cos(r3));

    f0.x = (a0.z * cos(r4)) + (a0.w * sin(r4));
    f0.y = (a0.z * sin(r4)) - (a0.w * cos(r4));

    OUT.color_0.xy = f2 + f0;
    OUT.color_0.z = 0;
    OUT.color_0.w = 1;

    return OUT;
};

// approximately 38 instruction slots used (2 texture, 36 arithmetic)
