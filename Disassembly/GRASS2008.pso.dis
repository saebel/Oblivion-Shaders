//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/GRASS2008.pso /Fcshaderdump19/GRASS2008.pso.dis
//
//
// Parameters:
//
//   float4 AlphaTestRef;
//   sampler2D DiffuseMap;
//   float4 LightData;
//   float4 PSLightColor;
//   sampler2D ShadowMap;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   PSLightColor c2       1
//   AlphaTestRef c3       1
//   LightData    c4       1
//   DiffuseMap   s0       1
//   ShadowMap    s1       1
//

    ps_2_x
    def c0, 0, 1, 0.5, 0.00100000005
    def c1, 0.50999999, 0.00999999978, 0, 0
    def c5, 0.50999999, -0.00999999978, 0, 0
    def c6, 0.5, -0.5, -0.00136718748, 0.50999999
    def c7, 0, 0.5, 0.125, 0.600000024
    def c8, 0.49000001, 0.00999999978, 0, 0
    def c9, 0.49000001, -0.00999999978, 0, 0
    def c10, 0.5, 0.50999999, 0, 0
    def c11, 0.5, 0.49000001, 0, 0
    def c12, 0.49000001, 0, 0, 0
    def c13, 1, 1, 1, 0
    dcl_pp t0.xy
    dcl_pp_centroid t5
    dcl_pp_centroid t1
    dcl_pp_centroid t2.xyz
    dcl v0
    dcl_2d s0
    dcl_2d s1
    rcp_pp r1.w, t1.w
    mul_pp r10.xy, r1.w, t1
    mad_sat_pp r8.xy, r10, c6, c6.x
    mov r1.xy, c6
    mad_pp r0.xy, r10, r1, c7
    add_sat_pp r7.xy, r0, c1
    add_sat_pp r6.xy, r0, c8
    add_sat_pp r5.xy, r0, c5
    add_sat_pp r4.xy, r0, c9
    mad_sat_pp r3.xy, r10, r1, c10
    mad_sat_pp r2.xy, r10, r1, c11
    add_pp r0.z, r0.x, c6.w
    add_pp r0.w, r0.x, c6.w
    cmp_sat_pp r1.x, r0.z, r0.w, c0.x
    cmp_sat_pp r1.y, r0.y, r0.y, c0.x
    mad_pp r10.w, t1.y, -r1.w, c0.y
    add_sat_pp r0.xy, r0, c12
    texld_pp r9, r8, s1
    texld_pp r8, r7, s1
    texld_pp r7, r6, s1
    texld_pp r6, r5, s1
    texld_pp r5, r4, s1
    texld_pp r4, r3, s1
    texld_pp r3, r2, s1
    texld_pp r2, r1, s1
    texld_pp r0, r0, s1
    texld_pp r1, t0, s0
    mad_pp r0.w, t1.z, -c0.w, r9.x
    add_pp r0.w, -r0.w, c6.z
    cmp_pp r0.w, r0.w, c0.x, c0.y
    mad_pp r2.w, t1.z, -c0.w, r8.x
    add_pp r2.w, -r2.w, c6.z
    cmp_pp r2.w, r2.w, c0.x, c0.y
    add_pp r0.w, r0.w, r2.w
    mad_pp r2.w, t1.z, -c0.w, r7.x
    add_pp r2.w, -r2.w, c6.z
    cmp_pp r2.w, r2.w, c0.x, c0.y
    add_pp r0.w, r0.w, r2.w
    mad_pp r2.w, t1.z, -c0.w, r6.x
    add_pp r2.w, -r2.w, c6.z
    cmp_pp r2.w, r2.w, c0.x, c0.y
    add_pp r0.w, r0.w, r2.w
    mad_pp r2.w, t1.z, -c0.w, r5.x
    add_pp r2.w, -r2.w, c6.z
    cmp_pp r2.w, r2.w, c0.x, c0.y
    add_pp r0.w, r0.w, r2.w
    mad_pp r2.w, t1.z, -c0.w, r4.x
    add_pp r2.w, -r2.w, c6.z
    cmp_pp r2.w, r2.w, c0.x, c0.y
    add_pp r0.w, r0.w, r2.w
    mad_pp r2.w, r10.x, c0.z, c0.z
    mad_pp r3.w, t1.z, -c0.w, r3.x
    add_pp r3.w, -r3.w, c6.z
    cmp_pp r3.w, r3.w, c0.x, c0.y
    add_pp r0.w, r0.w, r3.w
    mad_pp r3.w, t1.z, -c0.w, r2.x
    add_pp r3.w, -r3.w, c6.z
    cmp_pp r3.w, r3.w, c0.x, c0.y
    add_pp r0.w, r0.w, r3.w
    mad_pp r3.w, t1.z, -c0.w, r0.x
    add_pp r3.w, -r3.w, c6.z
    cmp_pp r3.w, r3.w, c0.x, c0.y
    add_pp r0.w, r0.w, r3.w
    mul_sat_pp r0.w, r0.w, c7.z
    add_pp r0.w, r0.w, -c0.y
    add_pp r3.w, -r2.w, c0.y
    cmp_pp r2.w, r2.w, c0.y, c0.x
    cmp_pp r3.w, r3.w, c0.y, c0.x
    mul r2.w, r2.w, r3.w
    cmp_pp r4.w, r10.w, c0.y, c0.x
    mad_pp r3.w, r10.w, -c0.z, c0.y
    mul r2.w, r2.w, r4.w
    cmp_pp r3.w, r3.w, c0.y, c0.x
    mul r2.w, r2.w, r3.w
    cmp_pp r3.w, t1.z, c0.y, c0.x
    mul r3.w, r2.w, r3.w
    mov r2.yz, c0
    mad_pp r0.xyz, c2.w, r0.w, r2.y
    mov_pp r0.w, c0.y
    cmp_pp r0, -r3.w, c13, r0
    min_pp r4.w, r1.w, r0.w
    add_pp r5.w, -r0.x, c0.y
    add_pp r1.xyz, t2, -c4
    mul_pp r6.w, r5.w, c7.w
    dp3_pp r1.x, r1, r1
    rsq_pp r2.w, r1.x
    rcp_pp r2.w, r2.w
    mul_pp r7.w, r2.z, c4.w
    rcp_pp r7.w, r7.w
    mul_sat_pp r2.w, r2.w, r7.w
    mad_pp r1.xyz, r6.w, -c2, r2.y
    mul_pp r6.w, r2.w, r2.w
    add_pp r1.w, -r1.w, c3.x
    lrp_pp r2.xyz, r6.w, c0.y, r1
    lrp_pp r1.xyz, v0.w, c0.y, r2
    cmp_pp r1.w, r1.w, c0.x, c0.y
    add_pp r1.xyz, r1, -c0.y
    mul_pp r2.w, r1.w, t5.w
    min_pp r1.w, r4.w, r5.w
    mad_pp r1.xyz, r2.w, r1, c0.y
    cmp_pp r1, -r3.w, r0, r1
    min_pp r0.w, r1.w, r2.w
    mov_pp r0.xyz, r1
    mov_pp oC0, r0

// approximately 106 instruction slots used (10 texture, 96 arithmetic)
