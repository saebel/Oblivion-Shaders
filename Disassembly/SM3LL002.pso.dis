//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/SM3LL002.pso /Fcshaderdump19/SM3LL002.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   sampler2D BaseMap;
//   float3 HairTint;
//   sampler2D LayerMap;
//   float4 LightData[8];
//   float3 MatAlpha;
//   sampler2D NormalMap;
//   float4 ToggleADTS;
//   float4 ToggleNumLights;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   AmbientColor    c0       1
//   HairTint        c2       1
//   MatAlpha        c3       1
//   ToggleADTS      c5       1
//   ToggleNumLights c6       1
//   LightData       c9       8
//   BaseMap         s0       1
//   NormalMap       s1       1
//   LayerMap        s5       1
//

    ps_3_0
    def c1, -0.5, 0, 1, 4
    def c4, 2, -2, -3, -4
    def c7, 2, -6, -7, 0
    def c8, 2, -4, -5, -6
    def c17, -1, -2, 0, 2
    dcl_texcoord_pp v0.xy
    dcl_color_pp v1.y
    dcl_texcoord3_pp_centroid v2.xyz
    dcl_texcoord4_pp_centroid v3.xyz
    dcl_texcoord5_pp_centroid v4.xyz
    dcl_texcoord6_pp_centroid v5.xyz
    dcl_texcoord7_pp_centroid v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s5
    mov r2, c1
    add_pp r0.w, r2.w, -c6.x
    min_pp r1.x, c6.y, r0.w
    frc_pp r1.w, r1.x
    cmp r1.z, r1.x, c1.y, c1.z
    cmp r1.y, -r1.w, c1.y, c1.z
    texld_pp r0, v0, s1
    add_pp r0.xyz, r0, c1.x
    add_pp r0.xyz, r0, r0
    nrm_pp r7.xyz, v2
    nrm_pp r4.xyz, r0
    dp3_pp r0.x, r7, c10
    nrm_pp r6.xyz, v3
    nrm_pp r5.xyz, v4
    dp3_pp r0.y, r6, c10
    dp3_pp r0.z, r5, c10
    add_pp r0.w, r1.x, -r1.w
    dp3_pp r1.w, r4, r0
    mad r2.w, r1.z, r1.y, r0.w
    max_pp r0.z, r1.w, c1.y
    mov r0.w, c1.z
    mul_pp r0.xyz, r0.z, c9
    cmp r0, -c6.x, r2.y, r0
    cmp r1.w, -r2.w, c1.y, c1.z
    if_ne r1.w, -r1.w
      add r3.x, r0.w, r0.w
      add r3.yz, r3.x, c17.xxyw
      add r1.xyz, r3.x, c17.zxyw
      cmp r3.xyz, r1, r1, -r3
      cmp r1, -r3.x, c10, r2.y
      cmp r1, -r3.y, c11, r1
      cmp r1, -r3.z, c12, r1
      add r8.xyz, r1, -v5
      dp3 r1.z, r8, r8
      rsq r3.w, r1.z
      cmp_pp r1.xyz, -r3.x, c9, r2.y
      rcp r3.w, r3.w
      rcp_pp r1.w, r1.w
      dp3 r9.x, r7, r8
      dp3 r9.y, r6, r8
      dp3 r9.z, r5, r8
      mul_sat r3.w, r3.w, r1.w
      nrm_pp r8.xyz, r9
      dp3_pp r1.w, r4, r8
      mad_pp r3.w, r3.w, -r3.w, c1.z
      cmp_pp r1.xyz, -r3.y, c10, r1
      mul_pp r3.w, r1.w, r3.w
      cmp_pp r1.xyz, -r3.z, c11, r1
      max_pp r1.w, r3.w, c1.y
      mad_pp r0.xyz, r1, r1.w, r0
      add r0.w, r0.w, c1.z
    endif
    if_lt c1.z, r2.w
      mad r3.xyz, c4.x, r0.w, c4.yzww
      cmp r1, -r3_abs.x, c12, r2.y
      cmp r1, -r3_abs.y, c13, r1
      cmp r1, -r3_abs.z, c14, r1
      add r8.xyz, r1, -v5
      dp3 r1.z, r8, r8
      rsq r3.w, r1.z
      cmp_pp r1.xyz, -r3_abs.x, c11, r2.y
      rcp r3.w, r3.w
      rcp_pp r1.w, r1.w
      dp3 r9.x, r7, r8
      dp3 r9.y, r6, r8
      dp3 r9.z, r5, r8
      mul_sat r3.w, r3.w, r1.w
      nrm_pp r8.xyz, r9
      dp3_pp r1.w, r4, r8
      mad_pp r3.w, r3.w, -r3.w, c1.z
      cmp_pp r1.xyz, -r3_abs.y, c12, r1
      mul_pp r3.w, r1.w, r3.w
      cmp_pp r1.xyz, -r3_abs.z, c13, r1
      max_pp r1.w, r3.w, c1.y
      mad_pp r3.xyz, r1, r1.w, r0
      add r1.w, r0.w, c1.z
    else
      mov_pp r3.xyz, r0
      mov r1.w, r0.w
    endif
    if_lt c17.w, r2.w
      mad r1.xyz, c8.x, r1.w, c8.yzww
      cmp r0, -r1_abs.x, c14, r2.y
      cmp r0, -r1_abs.y, c15, r0
      cmp r0, -r1_abs.z, c16, r0
      add r8.xyz, r0, -v5
      dp3 r0.z, r8, r8
      rsq r3.w, r0.z
      cmp_pp r0.xyz, -r1_abs.x, c13, r2.y
      rcp r1.x, r3.w
      rcp_pp r0.w, r0.w
      dp3 r9.x, r7, r8
      dp3 r9.y, r6, r8
      dp3 r9.z, r5, r8
      mul_sat r1.x, r1.x, r0.w
      nrm_pp r8.xyz, r9
      dp3_pp r0.w, r4, r8
      mad_pp r1.x, r1.x, -r1.x, c1.z
      cmp_pp r0.xyz, -r1_abs.y, c14, r0
      mul_pp r1.y, r0.w, r1.x
      cmp_pp r0.xyz, -r1_abs.z, c15, r0
      max_pp r0.w, r1.y, c1.y
      mad_pp r3.xyz, r0, r0.w, r3
      add r1.w, r1.w, c1.z
    endif
    if_lt -c4.z, r2.w
      add r0.xyz, -v5, c16
      dp3 r1.x, r7, r0
      dp3 r1.y, r6, r0
      dp3 r1.z, r5, r0
      dp3 r0.w, r0, r0
      nrm_pp r0.xyz, r1
      rsq r0.w, r0.w
      rcp r1.z, r0.w
      rcp r1.y, c16.w
      dp3_pp r0.w, r4, r0
      mul_sat r0.z, r1.z, r1.y
      mad_pp r0.z, r0.z, -r0.z, c1.z
      mad r1.xy, c7.x, r1.w, c7.yzzw
      mul_pp r1.w, r0.w, r0.z
      cmp_pp r0.xyz, -r1_abs.x, c15, r2.y
      max_pp r0.w, r1.w, c1.y
      cmp_pp r0.xyz, -r1_abs.y, c16, r0
      mad_pp r3.xyz, r0, r0.w, r3
    endif
    add_pp r0.xyz, r2.x, c2
    mad_pp r0.xyz, v1.y, r0, -c1.x
    add_pp r4.xyz, r0, r0
    texld_pp r0, v0, s0
    texld_pp r1, v0, s5
    add_pp r2.w, r2.z, -c5.x
    lrp_pp r2.xyz, r1.w, r1, r0
    mov_pp r0.z, c5.x
    mad_pp r0.xyz, c0, r0.z, r2.w
    mul_pp r1.xyz, r4, r2
    add_pp r0.xyz, r3, r0
    mul_pp r1.xyz, r1, r0
    add_pp r0.xyz, -r1, v6
    mad_pp oC0.xyz, v6.w, r0, r1
    mul_pp oC0.w, r0.w, c3.x

// approximately 157 instruction slots used (3 texture, 154 arithmetic)
