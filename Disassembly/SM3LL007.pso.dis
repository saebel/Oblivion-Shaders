//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/SM3LL007.pso /Fcshaderdump19/SM3LL007.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   sampler2D BaseMap;
//   float3 EyePosition;
//   sampler2D FaceGenMap0;
//   sampler2D FaceGenMap1;
//   float4 LightData[8];
//   float3 MatAlpha;
//   sampler2D NormalMap;
//   float4 ToggleADTS;
//   float4 ToggleNumLights;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   AmbientColor    c0       1
//   EyePosition     c1       1
//   MatAlpha        c3       1
//   ToggleADTS      c5       1
//   ToggleNumLights c6       1
//   LightData       c9       8
//   BaseMap         s0       1
//   NormalMap       s1       1
//   FaceGenMap0     s4       1
//   FaceGenMap1     s5       1
//

    ps_3_0
    def c2, -0.5, 0, 1, 0.5
    def c4, 4, -1, -2, 0
    def c7, 2, -2, -3, -4
    def c8, 2, -6, -7, 0
    def c17, 2, -4, -5, -6
    dcl_texcoord_pp v0.xy
    dcl_color_pp v1.xyz
    dcl_texcoord3_pp_centroid v2.xyz
    dcl_texcoord4_pp_centroid v3.xyz
    dcl_texcoord5_pp_centroid v4.xyz
    dcl_texcoord6_pp_centroid v5.xyz
    dcl_texcoord7_pp_centroid v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s4
    dcl_2d s5
    texld_pp r1, v0, s1
    add_pp r0.xyz, r1, c2.x
    add_pp r0.xyz, r0, r0
    nrm_pp r2.xyz, v4
    add_pp r3.xyz, -v5, c1
    nrm_pp r1.xyz, r0
    dp3_pp r0.z, r2, r3
    nrm_pp r6.xyz, v2
    nrm_pp r7.xyz, v3
    dp3_pp r0.x, r6, r3
    dp3_pp r0.y, r7, r3
    mov r11.yz, c2
    cmp r0.w, -c6.x, r11.y, r11.z
    nrm_pp r5.xyz, r0
    if_ne r0.w, -r0.w
      dp3_pp r0.x, r6, c10
      dp3_pp r2.w, r1, r5
      dp3_pp r0.y, r7, c10
      max_pp r0.w, r2.w, c2.y
      dp3_pp r0.z, r2, c10
      add_pp r0.w, -r0.w, c2.z
      add_pp r4.xyz, r5, r0
      mul_pp r2.w, r0.w, r0.w
      nrm_pp r3.xyz, r4
      mul_pp r2.w, r0.w, r2.w
      dp3_pp r0.w, r1, r0
      mul_pp r0.xyz, r2.w, c9
      dp3_sat_pp r2.w, r3, r1
      mad_pp r3.xyz, r0, c2.w, r0.w
      pow_pp r0.w, r2.w, c6.z
      max_pp r0.xyz, r3, c2.y
      mul_pp r4.xyz, r0, c9
      mov r2.w, c2.z
      mul_pp r3.xyz, r0.w, c9
    else
      mov r0.w, c2.y
      mov_pp r4.xyz, r0.w
      mov_pp r3.xyz, r0.w
      mov r2.w, r0.w
    endif
    mov_pp r0.w, c4.x
    add_pp r3.w, r0.w, -c6.x
    min_pp r0.x, c6.y, r3.w
    cmp r0.w, r0.x, c2.y, c2.z
    frc_pp r0.y, r0.x
    cmp r0.z, -r0.y, c2.y, c2.z
    add_pp r0.y, r0.x, -r0.y
    mad r3.w, r0.w, r0.z, r0.y
    cmp r0.w, -r3.w, c2.y, c2.z
    if_ne r0.w, -r0.w
      add r8.x, r2.w, r2.w
      add r8.yz, r8.x, c4
      add r0.xyz, r8.x, c4.wyzw
      cmp r9.xyz, r0, r0, -r8
      cmp r0, -r9.x, c10, r11.y
      cmp r0, -r9.y, c11, r0
      cmp r0, -r9.z, c12, r0
      add r8.xyz, r0, -v5
      cmp_pp r0.xyz, -r9.x, c9, r11.y
      dp3 r4.w, r8, r8
      cmp_pp r0.xyz, -r9.y, c10, r0
      rsq r4.w, r4.w
      rcp r4.w, r4.w
      rcp_pp r0.w, r0.w
      cmp_pp r0.xyz, -r9.z, c11, r0
      mul_sat r0.w, r4.w, r0.w
      dp3 r9.x, r6, r8
      dp3 r9.y, r7, r8
      dp3 r9.z, r2, r8
      dp3_pp r5.w, r1, r5
      nrm_pp r8.xyz, r9
      max_pp r4.w, r5.w, c2.y
      add_pp r10.xyz, r5, r8
      add_pp r4.w, -r4.w, c2.z
      nrm_pp r9.xyz, r10
      mul_pp r6.w, r4.w, r4.w
      dp3_sat_pp r5.w, r9, r1
      mul_pp r4.w, r4.w, r6.w
      dp3_pp r6.w, r1, r8
      mul_pp r8.xyz, r0, r4.w
      max_pp r4.w, r6.w, c2.y
      mul_pp r8.xyz, r8, c2.w
      mad_pp r0.w, r0.w, -r0.w, c2.z
      mad_pp r8.xyz, r0, r4.w, r8
      pow_pp r4.w, r5.w, c6.z
      mul_pp r9.xyz, r0.w, r8
      mul_pp r8.xyz, r0, r4.w
      max_pp r0.xyz, r9, c2.y
      mad_pp r3.xyz, r8, r0.w, r3
      add_pp r4.xyz, r4, r0
      add r2.w, r2.w, c2.z
    endif
    if_lt c2.z, r3.w
      mad r9.xyz, c7.x, r2.w, c7.yzww
      cmp r0, -r9_abs.x, c12, r11.y
      cmp r0, -r9_abs.y, c13, r0
      cmp r0, -r9_abs.z, c14, r0
      add r8.xyz, r0, -v5
      cmp_pp r0.xyz, -r9_abs.x, c11, r11.y
      dp3 r4.w, r8, r8
      cmp_pp r0.xyz, -r9_abs.y, c12, r0
      rsq r4.w, r4.w
      rcp r4.w, r4.w
      rcp_pp r0.w, r0.w
      cmp_pp r0.xyz, -r9_abs.z, c13, r0
      mul_sat r0.w, r4.w, r0.w
      dp3 r9.x, r6, r8
      dp3 r9.y, r7, r8
      dp3 r9.z, r2, r8
      dp3_pp r5.w, r1, r5
      nrm_pp r8.xyz, r9
      max_pp r4.w, r5.w, c2.y
      add_pp r10.xyz, r5, r8
      add_pp r4.w, -r4.w, c2.z
      nrm_pp r9.xyz, r10
      mul_pp r6.w, r4.w, r4.w
      dp3_sat_pp r5.w, r9, r1
      mul_pp r4.w, r4.w, r6.w
      dp3_pp r6.w, r1, r8
      mul_pp r8.xyz, r0, r4.w
      max_pp r4.w, r6.w, c2.y
      mul_pp r8.xyz, r8, c2.w
      mad_pp r0.w, r0.w, -r0.w, c2.z
      mad_pp r8.xyz, r0, r4.w, r8
      pow_pp r4.w, r5.w, c6.z
      mul_pp r9.xyz, r0.w, r8
      mul_pp r8.xyz, r0, r4.w
      max_pp r0.xyz, r9, c2.y
      mad_pp r3.xyz, r8, r0.w, r3
      add_pp r4.xyz, r4, r0
      add r2.w, r2.w, c2.z
    endif
    if_lt -c4.z, r3.w
      mad r9.xyz, c17.x, r2.w, c17.yzww
      cmp r0, -r9_abs.x, c14, r11.y
      cmp r0, -r9_abs.y, c15, r0
      cmp r0, -r9_abs.z, c16, r0
      add r8.xyz, r0, -v5
      cmp_pp r0.xyz, -r9_abs.x, c13, r11.y
      dp3 r4.w, r8, r8
      cmp_pp r0.xyz, -r9_abs.y, c14, r0
      rsq r4.w, r4.w
      rcp r4.w, r4.w
      rcp_pp r0.w, r0.w
      cmp_pp r0.xyz, -r9_abs.z, c15, r0
      mul_sat r0.w, r4.w, r0.w
      dp3 r9.x, r6, r8
      dp3 r9.y, r7, r8
      dp3 r9.z, r2, r8
      dp3_pp r5.w, r1, r5
      nrm_pp r8.xyz, r9
      max_pp r4.w, r5.w, c2.y
      add_pp r10.xyz, r5, r8
      add_pp r4.w, -r4.w, c2.z
      nrm_pp r9.xyz, r10
      mul_pp r6.w, r4.w, r4.w
      dp3_sat_pp r5.w, r9, r1
      mul_pp r4.w, r4.w, r6.w
      dp3_pp r6.w, r1, r8
      mul_pp r8.xyz, r0, r4.w
      max_pp r4.w, r6.w, c2.y
      mul_pp r8.xyz, r8, c2.w
      mad_pp r0.w, r0.w, -r0.w, c2.z
      mad_pp r8.xyz, r0, r4.w, r8
      pow_pp r4.w, r5.w, c6.z
      mul_pp r9.xyz, r0.w, r8
      mul_pp r8.xyz, r0, r4.w
      max_pp r0.xyz, r9, c2.y
      mad_pp r3.xyz, r8, r0.w, r3
      add_pp r4.xyz, r4, r0
      add r2.w, r2.w, c2.z
    endif
    if_lt -c7.z, r3.w
      add r0.xyz, -v5, c16
      dp3 r6.x, r6, r0
      dp3 r6.y, r7, r0
      dp3 r6.z, r2, r0
      nrm_pp r2.xyz, r6
      dp3 r0.w, r0, r0
      add_pp r6.xyz, r5, r2
      nrm_pp r0.xyz, r6
      rsq r0.w, r0.w
      dp3_sat_pp r3.w, r0, r1
      rcp r0.w, r0.w
      rcp r0.z, c16.w
      dp3_pp r4.w, r1, r5
      mul_sat r0.w, r0.w, r0.z
      max_pp r0.z, r4.w, c2.y
      mad r5.xy, c8.x, r2.w, c8.yzzw
      add_pp r2.w, -r0.z, c2.z
      cmp_pp r0.xyz, -r5_abs.x, c15, r11.y
      mul_pp r4.w, r2.w, r2.w
      cmp_pp r0.xyz, -r5_abs.y, c16, r0
      mul_pp r2.w, r2.w, r4.w
      dp3_pp r4.w, r1, r2
      mul_pp r1.xyz, r0, r2.w
      max_pp r2.w, r4.w, c2.y
      mul_pp r1.xyz, r1, c2.w
      mad_pp r0.w, r0.w, -r0.w, c2.z
      mad_pp r1.xyz, r0, r2.w, r1
      pow_pp r2.w, r3.w, c6.z
      mul_pp r2.xyz, r0.w, r1
      mul_pp r1.xyz, r0, r2.w
      max_pp r0.xyz, r2, c2.y
      mad_pp r3.xyz, r1, r0.w, r3
      add_pp r4.xyz, r4, r0
    endif
    texld_pp r0, v0, s4
    add_pp r1.xyz, r0, c2.x
    texld_pp r0, v0, s0
    mad_pp r0.xyz, -c4.z, r1, r0
    texld_pp r2, v0, s5
    add_pp r1.xyz, r2, r2
    add_pp r2.w, r11.z, -c5.x
    mul_pp r1.xyz, r0, r1
    mov_pp r0.z, c5.x
    mad_pp r0.xyz, c0, r0.z, r2.w
    add_pp r0.xyz, r4, r0
    mul_pp r1.xyz, r1, v1
    mul_pp r2.xyz, r1.w, r3
    add_pp r1.xyz, r1, r1
    mad_pp r1.xyz, r0, r1, r2
    add_pp r0.xyz, -r1, v6
    mad_pp oC0.xyz, v6.w, r0, r1
    mul_pp oC0.w, r0.w, c3.x

// approximately 263 instruction slots used (4 texture, 259 arithmetic)
