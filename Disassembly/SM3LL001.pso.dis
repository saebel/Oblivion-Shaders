//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/SM3LL001.pso /Fcshaderdump19/SM3LL001.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   sampler2D BaseMap;
//   float3 EyePosition;
//   float4 LightData[8];
//   float3 MatAlpha;
//   sampler2D NormalMap;
//   float4 ToggleADTS;
//   float4 ToggleNumLights;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   AmbientColor    c0       1
//   EyePosition     c1       1
//   MatAlpha        c3       1
//   ToggleADTS      c5       1
//   ToggleNumLights c6       1
//   LightData       c9       8
//   BaseMap         s0       1
//   NormalMap       s1       1
//

    ps_3_0
    def c2, -0.5, 0, 1, 4
    def c4, 2, -4, -5, -6
    def c7, 2, -6, -7, 0
    def c8, -1, -2, 0, 2
    def c17, 2, -2, -3, -4
    dcl_texcoord_pp v0.xy
    dcl_color_pp v1.xyz
    dcl_texcoord3_pp_centroid v2.xyz
    dcl_texcoord4_pp_centroid v3.xyz
    dcl_texcoord5_pp_centroid v4.xyz
    dcl_texcoord6_pp_centroid v5.xyz
    dcl_texcoord7_pp_centroid v6
    dcl_2d s0
    dcl_2d s1
    texld_pp r0, v0, s1
    add_pp r0.xyz, r0, c2.x
    add_pp r0.xyz, r0, r0
    nrm_pp r7.xyz, v4
    add_pp r1.xyz, -v5, c1
    nrm_pp r4.xyz, r0
    dp3_pp r0.z, r7, r1
    nrm_pp r9.xyz, v2
    nrm_pp r8.xyz, v3
    dp3_pp r0.x, r9, r1
    dp3_pp r0.y, r8, r1
    mov r3.yzw, c2
    cmp r1.w, -c6.x, r3.y, r3.z
    nrm_pp r6.xyz, r0
    if_ne r1.w, -r1.w
      dp3_pp r0.x, r9, c10
      dp3_pp r0.y, r8, c10
      dp3_pp r0.z, r7, c10
      add_pp r2.xyz, r6, r0
      nrm_pp r1.xyz, r2
      dp3_sat_pp r1.z, r1, r4
      dp3_pp r1.w, r4, r0
      pow_pp r0.z, r1.z, c6.z
      max_pp r0.y, r1.w, c2.y
      mov r2.w, c2.z
      mul_pp r2.xyz, r0.y, c9
      mul_pp r0.xyz, r0.z, c9
    else
      mov r2.yzw, c2.y
      mov_pp r2.xyz, r2.wyzw
      mov_pp r0.xyz, r2.w
    endif
    add_pp r3.w, r3.w, -c6.x
    min_pp r1.x, c6.y, r3.w
    cmp r1.w, r1.x, c2.y, c2.z
    frc_pp r1.y, r1.x
    cmp r1.z, -r1.y, c2.y, c2.z
    add_pp r1.y, r1.x, -r1.y
    mad r3.x, r1.w, r1.z, r1.y
    cmp r1.w, -r3.x, c2.y, c2.z
    if_ne r1.w, -r1.w
      add r5.x, r2.w, r2.w
      add r5.yz, r5.x, c8.xxyw
      add r1.xyz, r5.x, c8.zxyw
      cmp r10.xyz, r1, r1, -r5
      cmp r1, -r10.x, c10, r3.y
      cmp r1, -r10.y, c11, r1
      cmp r1, -r10.z, c12, r1
      cmp_pp r11.xyz, -r10.x, c9, r3.y
      add r5.xyz, r1, -v5
      cmp_pp r1.xyz, -r10.y, c10, r11
      dp3 r11.x, r9, r5
      dp3 r11.y, r8, r5
      dp3 r11.z, r7, r5
      cmp_pp r1.xyz, -r10.z, c11, r1
      nrm_pp r10.xyz, r11
      dp3 r3.w, r5, r5
      add_pp r11.xyz, r6, r10
      rsq r3.w, r3.w
      nrm_pp r5.xyz, r11
      rcp r4.w, r3.w
      dp3_sat_pp r5.w, r5, r4
      rcp_pp r1.w, r1.w
      pow_pp r3.w, r5.w, c6.z
      mul_sat r1.w, r4.w, r1.w
      mul_pp r5.xyz, r1, r3.w
      mad_pp r3.w, r1.w, -r1.w, c2.z
      dp3_pp r1.w, r4, r10
      mad_pp r0.xyz, r5, r3.w, r0
      mul_pp r3.w, r3.w, r1.w
      max_pp r1.w, r3.w, c2.y
      add r3.w, r2.w, c2.z
      mad_pp r2.xyz, r1, r1.w, r2
    else
      mov r3.w, r2.w
    endif
    if_lt c2.z, r3.x
      mad r10.xyz, c17.x, r3.w, c17.yzww
      cmp r1, -r10_abs.x, c12, r3.y
      cmp r1, -r10_abs.y, c13, r1
      cmp r1, -r10_abs.z, c14, r1
      cmp_pp r11.xyz, -r10_abs.x, c11, r3.y
      add r5.xyz, r1, -v5
      cmp_pp r1.xyz, -r10_abs.y, c12, r11
      dp3 r11.x, r9, r5
      dp3 r11.y, r8, r5
      dp3 r11.z, r7, r5
      cmp_pp r1.xyz, -r10_abs.z, c13, r1
      nrm_pp r10.xyz, r11
      dp3 r2.w, r5, r5
      add_pp r11.xyz, r6, r10
      rsq r2.w, r2.w
      nrm_pp r5.xyz, r11
      rcp r4.w, r2.w
      dp3_sat_pp r5.w, r5, r4
      rcp_pp r1.w, r1.w
      pow_pp r2.w, r5.w, c6.z
      mul_sat r1.w, r4.w, r1.w
      mul_pp r5.xyz, r1, r2.w
      mad_pp r2.w, r1.w, -r1.w, c2.z
      dp3_pp r1.w, r4, r10
      mad_pp r0.xyz, r5, r2.w, r0
      mul_pp r2.w, r2.w, r1.w
      max_pp r1.w, r2.w, c2.y
      add r3.w, r3.w, c2.z
      mad_pp r2.xyz, r1, r1.w, r2
    endif
    if_lt c8.w, r3.x
      mad r10.xyz, c4.x, r3.w, c4.yzww
      cmp r1, -r10_abs.x, c14, r3.y
      cmp r1, -r10_abs.y, c15, r1
      cmp r1, -r10_abs.z, c16, r1
      cmp_pp r11.xyz, -r10_abs.x, c13, r3.y
      add r5.xyz, r1, -v5
      cmp_pp r1.xyz, -r10_abs.y, c14, r11
      dp3 r11.x, r9, r5
      dp3 r11.y, r8, r5
      dp3 r11.z, r7, r5
      cmp_pp r1.xyz, -r10_abs.z, c15, r1
      nrm_pp r10.xyz, r11
      dp3 r2.w, r5, r5
      add_pp r11.xyz, r6, r10
      rsq r2.w, r2.w
      nrm_pp r5.xyz, r11
      rcp r4.w, r2.w
      dp3_sat_pp r5.w, r5, r4
      rcp_pp r1.w, r1.w
      pow_pp r2.w, r5.w, c6.z
      mul_sat r1.w, r4.w, r1.w
      mul_pp r5.xyz, r1, r2.w
      mad_pp r2.w, r1.w, -r1.w, c2.z
      dp3_pp r1.w, r4, r10
      mad_pp r0.xyz, r5, r2.w, r0
      mul_pp r2.w, r2.w, r1.w
      max_pp r1.w, r2.w, c2.y
      add r3.w, r3.w, c2.z
      mad_pp r2.xyz, r1, r1.w, r2
    endif
    if_lt -c17.z, r3.x
      add r5.xyz, -v5, c16
      dp3 r1.x, r9, r5
      dp3 r1.y, r8, r5
      dp3 r1.z, r7, r5
      dp3 r1.w, r5, r5
      nrm_pp r5.xyz, r1
      add_pp r6.xyz, r6, r5
      rsq r1.w, r1.w
      rcp r1.w, r1.w
      rcp r2.w, c16.w
      nrm_pp r1.xyz, r6
      mul_sat r1.w, r1.w, r2.w
      dp3_sat_pp r3.x, r1, r4
      mad_pp r2.w, r1.w, -r1.w, c2.z
      pow_pp r1.w, r3.x, c6.z
      mad r6.xy, c7.x, r3.w, c7.yzzw
      cmp_pp r1.xyz, -r6_abs.x, c15, r3.y
      dp3_pp r3.w, r4, r5
      cmp_pp r1.xyz, -r6_abs.y, c16, r1
      mul_pp r3.w, r2.w, r3.w
      mul_pp r4.xyz, r1.w, r1
      max_pp r1.w, r3.w, c2.y
      mad_pp r0.xyz, r4, r2.w, r0
      mad_pp r2.xyz, r1, r1.w, r2
    endif
    add_pp r1.z, r3.z, -c5.x
    mov_pp r1.w, c5.x
    mad_pp r1.xyz, c0, r1.w, r1.z
    add_pp r1.xyz, r2, r1
    mul_pp r2.xyz, r0.w, r0
    texld_pp r0, v0, s0
    mul_pp r0.xyz, r0, v1
    mad_pp r1.xyz, r1, r0, r2
    add_pp r0.xyz, -r1, v6
    mad_pp oC0.xyz, v6.w, r0, r1
    mul_pp oC0.w, r0.w, c3.x

// approximately 213 instruction slots used (2 texture, 211 arithmetic)
