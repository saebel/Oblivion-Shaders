
# version-numbers
/    ps_3_0/d
/    ps_2_x/d
/    vs_3_0/d
/    vs_2_0/d
/    vs_1_1/d

# constants
s/def \(c[0-9]\+\), \([0-9\.\-]\+\), \([0-9\.\-]\+\), \([0-9\.\-]\+\), \([0-9\.\-]\+\)/\1 = {\2, \3, \4, \5};/g

# operators (_pp)
s/\(.*\)_centroid \([^\t]*\)/\1 \2\t\t\t\/\/ centroid/g
s/\(.*\)_pp \([^\t]*\)/\1 \2\t\t\t\/\/ partial precision/g
s/expp \(.*\)/exp \1\t\/\/ partial precision/g

# inputs (pixel)
s/dcl_position \([a-z0-9_\.]\+\)/position \1;/g
s/dcl_color\([0-9]\+\) \([a-z0-9_\.]\+\)/color_\1 \2;/g
s/dcl_texcoord\([0-9]\+\) \([a-z0-9_\.]\+\)/texcoord_\1 \2;/g
s/dcl_texcoord \([v0-9]\+\)\([a-z0-9_\.]\+\)/texcoord \1\2;/g
s/dcl_texcoord \([o0-9]\+\)\([a-z0-9_\.]\+\)/texcoord \1\2;/g
s/dcl_tangent \([v0-9]\+\)\([a-z0-9_\.]\+\)/tangent \1\2;/g
s/dcl_binormal \([v0-9]\+\)\([a-z0-9_\.]\+\)/binormal \1\2;/g
s/dcl_normal \([v0-9]\+\)\([a-z0-9_\.]\+\)/normal \1\2;/g
s/dcl_color \([v0-9]\+\)\([a-z0-9_\.]\+\)/color \1\2;/g
s/dcl_2d \([s0-9]\+\)\([a-z0-9_\.]\+\)/sampler \1\2;/g
s/dcl v\([a-z0-9_\.]\+\)/color input_\1;/g
s/dcl t\([a-z0-9_\.]\+\)/texcoord input_\1;/g
s/dcl s\([a-z0-9_\.]\+\)/sampler texture_\1;/g

# output registers (pixel)
s/oC\([0-9]\+\)/rendertarget_\1/g
s/oDepth/zbuffer/g

# output registers (vertex)
s/oPos/position/g
s/oFog/fog/g
s/oPts/pointsize/g
s/oD\([0-9]\+\)/color_\1/g
s/oT\([0-9]\+\)/texcoord_\1/g
# output registers (vertex 2.x)
s/\([^a-zA-Z]\)t\([0-9]\+\)/\1texcoord_\2/g
s/\([^a-zA-Z]\)o\([0-9]\+\)/\1output_\2/g
s/\([^a-zA-Z]\)v\([0-9]\+\)/\1input_\2/g
s/\([^a-zA-Z]\)s\([0-9]\+\)/\1texture_\2/g
s/\([^a-zA-Z]\)c\([0-9]\+\)/\1const_\2/g

# modifiers (vertex)
### s/\([a-z0-9_]\+\)_sat\([a-z0-9_\.]*\)/sat(\1\2)/g
s/\([a-z0-9_]\+\)_sat\([a-z0-9_\.]*\)/sat \1\2/g

# operators (pixel & vertex)
s/add \([][a-z0-9_\.]\+\), \([][a-z0-9_\.]\+\), \(\-\?\)\([][a-z0-9_\.]\+\)/\1 = \2 - \4;/g
s/add \([][a-z0-9_\.]\+\), \(\-\?\)\([][a-z0-9_\.]\+\), \([][a-z0-9_\.]\+\)/\1 = \4 - \3;/g

# cmp d, -abs(x), a, b	=>	d = -abs(x) >= 0.0 ? a : b	=>	d = x == 0.0 ? a : b
s/cmp \([][a-z0-9_\.]\+\), -\([a-z0-9]\+\)_abs\([][a-z0-9_\.]*\), \([][a-z0-9_\.]\+\), \([][a-z0-9_\.]\+\)/\1 = (\2\3 == 0.0 ? \4 : \5)/g
# cmp d, -    x , a, b	=>	d = -    x  >= 0.0 ? a : b	=>	d = x <= 0.0 ? a : b
s/cmp \([][a-z0-9_\.]\+\), -\([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 <= 0.0 ? \4 : \3);/g
s/cmp \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 >= 0.0 ? \4 : \3);/g
s/mul \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = \2 * \3;/g
s/mad \([][a-z0-9_\.]\+\), \([][a-z0-9_\-]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\3 * \2) + \4;/g
s/mad \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\), \(\-\?\)\([][a-z0-9_\.]\+\)/\1 = (\2 * \3) - \5;/g
s/mad \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 * \3) + \4;/g
s/mov \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\)/\1 = \2;/g
s/texld \([][a-z0-9_\.]\+\), \([][a-z0-9_\.]\+\), \([][a-z0-9_\.]\+\)/\1 = \3[\2];/g

# operators (vertex)
s/sge \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 >= \3 ? 1.0 : 0.0);/g
s/slt \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 < \3 ? 1.0 : 0.0);/g
s/max \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 >= \3 ? \2 : \3);/g
s/min \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2 < \3 ? \2 : \3);/g
s/nrm \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\)/\1 = norm(\2);/g
s/rsq \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\)/\1 = 1.0 \/ sqrt(\2);/g
s/rcp \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\)/\1 = 1.0 \/ \2;/g
s/frc \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\)/\1 = \2 - floor(\2);/g
s/exp \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\)/\1 = pow(2.0, \2);/g
s/lrp \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = \2 * (\3 - \4) + \4;/g
s/dp3 \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2.x * \3.x) + (\2.y * \3.y) + (\2.z * \3.z);/g
s/dp4 \([][a-z0-9_\.]\+\), \([][a-z0-9_\.\-]\+\), \([][a-z0-9_\.\-]\+\)/\1 = (\2.x * \3.x) + (\2.y * \3.y) + (\2.z * \3.z) + (\2.w * \3.w);/g

# modifiers (vertex)
s/\([a-z0-9_]\+\)_abs\([a-z0-9_\.]*\)/abs(\1\2)/g
s/sat \([][a-z0-9_\.]*\) = \([^;]*\);/\1 = sat(\2);/g

# repair
# s/floatexcoord_/float/g
