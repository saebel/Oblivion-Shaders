//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATER011.pso /Fcshaderdump19/WATER011.pso.dis
//
//
// Parameters:

float4 DeepColor;
sampler2D DetailMap;
float4 EyePos;
float4 FogColor;
float4 FogParam;
float FresnelRI;
sampler2D NormalMap;
float2 Scroll;
float4 ShallowColor;
float4 VarAmounts;


// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   Scroll       const_0       1
//   EyePos       const_1       1
//   ShallowColor const_5       1
//   DeepColor    const_6       1
//   VarAmounts   const_8       1
//   FogParam     const_9       1
//   FogColor     const_10      1
//   FresnelRI    const_11      1
//   NormalMap    texture_1       1
//   DetailMap    texture_2       1
//



// Structures:

struct VS_OUTPUT {
    float3 texcoord_1 : TEXCOORD1_centroid;
    float2 texcoord_6 : TEXCOORD6;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    const float4 const_2 = {0.1, 0.2, 0, 0};
    const float4 const_3 = {2, -1, 0, -(1.0 / 8192)};

    float4 r0;
    float4 r1;
    float4 r2;
    float3 r3;

    r1.xy = IN.texcoord_6.xy + Scroll.xy;
    r0.xyzw = tex2D(NormalMap, r1.xy);
    r0.xyz = (2 * r0.xyz) - 1;
    r1.w = saturate((length(EyePos.xy - IN.texcoord_1.xy) * -(1.0 / 8192)) + 1);
    r0.xy = (r1.w * r1.w) * r0.xy;
    r2.xyz = normalize(r0.xyz);
    r0.xyzw = tex2D(DetailMap, (0.1 * r2.xy) + r1.xy);
    r1.xyz = EyePos.xyz - IN.texcoord_1.xyz;
    r2.w = 1.0 / length(r1.xyz);
    r0.w = 1 - saturate(dot(r1.xyz * r2.w, r2.xyz));
    r3.xyz = lerp(r0.xyz, ((saturate(r2.y + r2.y) * (ShallowColor.rgb - DeepColor.rgb)) + DeepColor.rgb), r1.w * VarAmounts.w);
    r0.xyz = ((1 - saturate((FogParam.x - (1.0 / r2.w)) / FogParam.y)) * (FogColor.rgb - r3.xyz)) + r3.xyz;
    r0.x = ((r1.w * r0.x) * 0.2) + r0.x;
    r1.w = r0.w * r0.w;
    r0.w = max(VarAmounts.z, ((1 - FresnelRI.x) * (r0.w * (r1.w * r1.w))) + FresnelRI.x);
    OUT.color_0.rgba = r0.xyzw;

    return OUT;
};

// approximately 45 instruction slots used (2 texture, 43 arithmetic)
