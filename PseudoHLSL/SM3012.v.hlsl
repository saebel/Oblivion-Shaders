//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3012.vso /Fcshaderdump19/SM3012.vso.dis
//
//
// Parameters:
//
float3 BoundWorldCenter : register(c20);
float3 EyePosition : register(c14);
row_major float4x4 ModelViewProj : register(c0);
row_major float4x4 ObjToCubeSpace : register(c10);
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   ModelViewProj[0]    const_0        1
//   ModelViewProj[1]    const_1        1
//   ModelViewProj[2]    const_2        1
//   ModelViewProj[3]    const_3        1
//   ObjToCubeSpace[0]   const_10       1
//   ObjToCubeSpace[1]   const_11       1
//   ObjToCubeSpace[2]   const_12       1
//   EyePosition      const_14      1
//   BoundWorldCenter const_20      1
//


// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float4 texcoord_0 : TEXCOORD0;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float4 texcoord_1 : TEXCOORD1;
    float3 texcoord_2 : TEXCOORD2;
    float3 color_0 : COLOR0;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

#define	expand(v)		(((v) - 0.5) / 0.5)
#define	compress(v)		(((v) * 0.5) + 0.5)
#define	weight(v)		dot(v, 1)
#define	sqr(v)			((v) * (v))

    float3 eye0;
    float3 q11;
    float1 q2;
    float3 q5;

    q11.xyz = mul(float3x4(ObjToCubeSpace[0].xyzw, ObjToCubeSpace[1].xyzw, ObjToCubeSpace[2].xyzw), IN.position.xyzw);
    q5.xyz = normalize(q11.xyz - BoundWorldCenter.xyz);
    eye0.xyz = EyePosition.xyz - q11.xyz;
    q2.x = saturate(((dot(q5.xyz, normalize(eye0.xyz)) / length(q5.xyz)) - 0.8) * 6.66666651);
    OUT.color_0.rgb = 1;
    OUT.position.xyzw = mul(ModelViewProj, IN.position.xyzw);
    OUT.texcoord_0.xy = IN.texcoord_0.xy;
    OUT.texcoord_1.w = (3 - (q2.x * 2)) * sqr(q2.x);
    OUT.texcoord_1.xyz = compress(q5.xyz);	// [-1,+1] to [0,1]
    OUT.texcoord_2.xyz = eye0.xyz;

    return OUT;
};

// approximately 27 instruction slots used
