//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2050.pso /Fcshaderdump19/SLS2050.pso.dis
//
//
// Parameters:

sampler2D BaseMap;
sampler2D NormalMap;
float4 PSLightColor[4];


// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   PSLightColor[0] const_2        1
//   PSLightColor[1] const_3        1
//   PSLightColor[2] const_4        1
//   BaseMap      texture_0       1
//   NormalMap    texture_1       1
//



// Structures:

struct VS_OUTPUT {
    float2 texcoord_0 : TEXCOORD0;			// partial precision
    float3 texcoord_1 : TEXCOORD1_centroid;			// partial precision
    float4 texcoord_2 : TEXCOORD2_centroid;
    float4 texcoord_3 : TEXCOORD3_centroid;
    float4 texcoord_4 : TEXCOORD4_centroid;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    const float4 const_0 = {-0.5, 1, 0, 0};

    float4 r0;
    float4 r1;
    float3 r2;
    float4 r3;

    r0.xyzw = tex2D(BaseMap, IN.texcoord_0.xy);			// partial precision
    r0.w = 1.0 / length(IN.texcoord_3.xyz);
    r1.xyzw = tex2D(NormalMap, IN.texcoord_0.xy);			// partial precision
    r2.xyz = normalize(2 * (r1.xyz - 0.5));			// partial precision	// [0,1] to [-1,+1]
    r3.w = 1.0 / length(IN.texcoord_2.xyz);
    r1.xyz = (saturate(dot(r2.xyz, r3.w * IN.texcoord_2.xyz)) * (1 - saturate((1.0 / r3.w) / IN.texcoord_2.w)) * PSLightColor[0].rgb) + (((1 - saturate((1.0 / r0.w) / IN.texcoord_3.w)) * saturate(dot(r2.xyz, r0.w * IN.texcoord_3.xyz))) * PSLightColor[1].rgb);			// partial precision
    r0.w = 1;
    r3.w = 1.0 / length(IN.texcoord_4.xyz);
    r0.xyz = ((saturate(dot(r2.xyz, r3.w * IN.texcoord_4.xyz)) * (1 - saturate((1.0 / r3.w) / IN.texcoord_4.w)) * PSLightColor[2].rgb) + r1.xyz) * (r0.xyz * IN.texcoord_1.xyz);			// partial precision
    OUT.color_0.rgba = r0.xyzw;			// partial precision

    return OUT;
};

// approximately 41 instruction slots used (2 texture, 39 arithmetic)
