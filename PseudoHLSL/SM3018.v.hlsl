//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3018.vso /Fcshaderdump19/SM3018.vso.dis
//
//
// Parameters:

row_major float4x4 ModelViewProj;
row_major float4x4 WorldView;


// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   ModelViewProj[0] const_0        1
//   ModelViewProj[1] const_1        1
//   ModelViewProj[2] const_2        1
//   ModelViewProj[3] const_3        1
//   WorldView[0]     const_5        1
//   WorldView[1]     const_6        1
//   WorldView[2]     const_7        1
//



// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float4 texcoord_0 : TEXCOORD0;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float4 texcoord_1 : TEXCOORD1;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    const int4 const_4 = {0, 0, 0, 0};

    OUT.position.w = dot(ModelViewProj[3].xyzw, IN.position.xyzw);
    OUT.position.x = dot(ModelViewProj[0].xyzw, IN.position.xyzw);
    OUT.position.y = dot(ModelViewProj[1].xyzw, IN.position.xyzw);
    OUT.position.z = dot(ModelViewProj[2].xyzw, IN.position.xyzw);
    OUT.texcoord_0.xy = IN.texcoord_0;
    OUT.texcoord_1.w = 0;
    OUT.texcoord_1.x = dot(WorldView[0].xyzw, IN.position.xyzw);
    OUT.texcoord_1.y = dot(WorldView[1].xyzw, IN.position.xyzw);
    OUT.texcoord_1.z = dot(WorldView[2].xyzw, IN.position.xyzw);

    return OUT;
};

// approximately 9 instruction slots used
