//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2057.vso /Fcshaderdump19/SLS2057.vso.dis
//
//
// Parameters:
//
row_major float4x4 ModelViewProj;
row_major float4x4 WorldViewTranspose;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   ModelViewProj[0]      const_0        1
//   ModelViewProj[1]      const_1        1
//   ModelViewProj[2]      const_2        1
//   ModelViewProj[3]      const_3        1
//   WorldViewTranspose[0] const_4        1
//   WorldViewTranspose[1] const_5        1
//


// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float3 normal : NORMAL;
    float4 texcoord_0 : TEXCOORD0;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float3 texcoord_0 : TEXCOORD0;
    float2 texcoord_1 : TEXCOORD1;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    float1 mdl0;
    float2 q6;

    q6.xy = mul(float2x3(WorldViewTranspose[0].xyz, WorldViewTranspose[1].xyz), IN.normal.xyz);
    mdl0.x = dot(ModelViewProj[2].xyzw, IN.position.xyzw);
    OUT.position.w = dot(ModelViewProj[3].xyzw, IN.position.xyzw);
    OUT.position.xy = mul(float2x4(ModelViewProj[0].xyzw, ModelViewProj[1].xyzw), IN.position.xyzw);
    OUT.position.z = mdl0.x;
    OUT.texcoord_0.xy = IN.texcoord_0.xy;
    OUT.texcoord_0.z = max((mdl0.x / 750) + 0.8, 1);
    OUT.texcoord_1.xy = max(min(q6.xy, 0.1), -0.1);

    return OUT;
};

// approximately 12 instruction slots used
