//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS1S011.vso /Fcshaderdump19/SLS1S011.vso.dis
//
//
// Parameters:
//
float4 Bones[54] : register(c42);
float3 LightDirection[3] : register(c13);
row_major float4x4 SkinModelViewProj : register(c1);
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   SkinModelViewProj[0] const_1        1
//   SkinModelViewProj[1] const_2        1
//   SkinModelViewProj[2] const_3        1
//   SkinModelViewProj[3] const_4        1
//   LightDirection[0]    const_13       1
//   Bones[0]             const_42      18
//   Bones[1]             const_43      18
//   Bones[2]             const_44      18
//


// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float3 tangent : TANGENT;
    float3 binormal : BINORMAL;
    float3 normal : NORMAL;
    float4 texcoord_0 : TEXCOORD0;
    float4 color_0 : COLOR0;
    float3 blendweight : BLENDWEIGHT;
    float4 blendindices : BLENDINDICES;
};

struct VS_OUTPUT {
    float4 color_0 : COLOR0;
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float2 texcoord_1 : TEXCOORD1;
    float2 texcoord_2 : TEXCOORD2;
    float3 texcoord_3 : TEXCOORD3;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

#define	expand(v)		(((v) - 0.5) / 0.5)
#define	compress(v)		(((v) * 0.5) + 0.5)
#define	weight(v)		dot(v, 1)
#define	sqr(v)			((v) * (v))

    const float4 const_0 = {1, 765.01001, 0, 0.5};

    float3 m56;
    float4 q1;
    float1 q11;
    float1 q13;
    float3 q16;
    float3 q17;
    float1 q2;
    float1 q21;
    float3 q36;
    float3 q37;
    float3 q38;
    float3 q39;
    float3 q40;
    float3 q44;
    float3 q45;
    float3 q46;
    float3 q47;
    float3 q48;
    float3 q49;
    float1 q5;
    float3 q50;
    float3 q51;
    float3 q52;
    float3 q54;
    float3 q57;
    float3 q58;
    float3 q67;
    float3 q74;
    float1 q9;
    float3 q99;
    float4 r0;
    float4 r1;
    float3 r3;

    OUT.color_0.rgba = IN.color_0.rgba;
    r1.xyzw = IN.blendindices.zyxw * 765.01001;
    q45.xyz = mul(float3x3(Bones[0 + r1.z].xyz, Bones[1 + r1.z].xyz, Bones[2 + r1.z].xyz), IN.tangent.xyz);
    q44.xyz = mul(float3x3(Bones[0 + r1.y].xyz, Bones[1 + r1.y].xyz, Bones[2 + r1.y].xyz), IN.tangent.xyz);
    q58.xyz = mul(float3x3(Bones[0 + r1.x].xyz, Bones[1 + r1.x].xyz, Bones[2 + r1.x].xyz), IN.tangent.xyz);
    q57.xyz = mul(float3x3(Bones[0 + r1.y].xyz, Bones[1 + r1.y].xyz, Bones[2 + r1.y].xyz), IN.normal.xyz);
    q49.xyz = mul(float3x3(Bones[0 + r1.z].xyz, Bones[1 + r1.z].xyz, Bones[2 + r1.z].xyz), IN.binormal.xyz);
    q47.xyz = mul(float3x3(Bones[0 + r1.y].xyz, Bones[1 + r1.y].xyz, Bones[2 + r1.y].xyz), IN.binormal.xyz);
    q2.x = 1 - weight(IN.blendweight.xyz);
    r0.w = 1;
    q1.xyzw = (IN.position.xyzx * const_0.xxxz) + const_0.zzzx;
    q9.x = r1.w;
    q5.x = r1.w;
    q21.x = r1.z;
    q13.x = r1.w;
    q11.x = r1.x;
    q38.xyz = mul(float3x4(Bones[0 + r1.z].xyzw, Bones[1 + r1.z].xyzw, Bones[2 + r1.z].xyzw), q1.xyzw);
    q37.xyz = mul(float3x4(Bones[0 + r1.x].xyzw, Bones[1 + r1.x].xyzw, Bones[2 + r1.x].xyzw), q1.xyzw);
    q36.xyz = mul(float3x4(Bones[0 + r1.y].xyzw, Bones[1 + r1.y].xyzw, Bones[2 + r1.y].xyzw), q1.xyzw);
    q40.xyz = mul(float3x4(Bones[0 + q5.x].xyzw, Bones[1 + q5.x].xyzw, Bones[2 + q5.x].xyzw), q1.xyzw);
    q52.xyz = mul(float3x3(Bones[0 + r1.w].xyz, Bones[1 + r1.w].xyz, Bones[2 + r1.w].xyz), IN.normal.xyz);
    q51.xyz = mul(float3x3(Bones[0 + r1.x].xyz, Bones[1 + r1.x].xyz, Bones[2 + r1.x].xyz), IN.normal.xyz);
    q46.xyz = mul(float3x3(Bones[0 + q9.x].xyz, Bones[1 + q9.x].xyz, Bones[2 + q9.x].xyz), IN.tangent.xyz);
    q99.xyz = mul(float3x3(Bones[0 + q21.x].xyz, Bones[1 + q21.x].xyz, Bones[2 + q21.x].xyz), IN.normal.xyz);
    q54.xyz = mul(float3x3(Bones[0 + q13.x].xyz, Bones[1 + q13.x].xyz, Bones[2 + q13.x].xyz), IN.binormal.xyz);
    q48.xyz = mul(float3x3(Bones[0 + q11.x].xyz, Bones[1 + q11.x].xyz, Bones[2 + q11.x].xyz), IN.binormal.xyz);
    q74.xyz = (IN.blendweight.z * q99.xyz) + ((IN.blendweight.x * q51.xyz) + (q57.xyz * IN.blendweight.y));
    q16.xyz = normalize((q2.x * q52.xyz) + q74.xyz);
    r3.xyz = (IN.blendweight.x * q58.xyz) + (q44.xyz * IN.blendweight.y);
    q67.xyz = normalize((q2.x * q46.xyz) + ((IN.blendweight.z * q45.xyz) + r3.xyz));
    q50.xyz = (IN.blendweight.z * q49.xyz) + ((IN.blendweight.x * q48.xyz) + (q47.xyz * IN.blendweight.y));
    q17.xyz = normalize((q2.x * q54.xyz) + q50.xyz);
    m56.xyz = mul(float3x3(q67.xyz, q17.xyz, q16.xyz), LightDirection[0].xyz);
    q39.xyz = (IN.blendweight.z * q38.xyz) + ((IN.blendweight.x * q37.xyz) + (q36.xyz * IN.blendweight.y));
    r0.xyz = (q2.x * q40.xyz) + q39.xyz;
    OUT.position.xyzw = mul(SkinModelViewProj, r0.xyzw);
    OUT.texcoord_0.xy = IN.texcoord_0.xy;
    OUT.texcoord_1.xy = IN.texcoord_0.xy;
    OUT.texcoord_2.xy = IN.texcoord_0.xy;
    OUT.texcoord_3.xyz = compress(m56.xyz);	// [-1,+1] to [0,1]

    return OUT;
};

// approximately 106 instruction slots used
