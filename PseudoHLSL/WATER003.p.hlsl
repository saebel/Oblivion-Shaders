//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATER003.pso /Fcshaderdump19/WATER003.pso.dis
//
//
// Parameters:
//
float4 DeepColor;
sampler2D DetailMap;
float4 EyePos;
float4 FogColor;
float4 FogParam;
float FresnelRI;
sampler2D NormalMap;
float4 ReflectionColor;
float2 Scroll;
float4 ShallowColor;
float4 SunColor;
float4 SunDir;
float4 VarAmounts;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Scroll          const_0       1
//   EyePos          const_1       1
//   SunDir          const_2       1
//   SunColor        const_3       1
//   ShallowColor    const_5       1
//   DeepColor       const_6       1
//   ReflectionColor const_7       1
//   VarAmounts      const_8       1
//   FogParam        const_9       1
//   FogColor        const_10      1
//   FresnelRI       const_11      1
//   NormalMap       texture_1       1
//   DetailMap       texture_2       1
//


// Structures:

struct VS_OUTPUT {
    float3 texcoord_1 : TEXCOORD1_centroid;
    float2 texcoord_6 : TEXCOORD6;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	expand(v)		(((v) - 0.5) / 0.5)
#define	compress(v)		(((v) * 0.5) + 0.5)
#define	shade(n, l)		max(dot(n, l), 0)
#define	shades(n, l)		saturate(dot(n, l))
#define	weight(v)		dot(v, 1)
#define	sqr(v)			((v) * (v))

    float3 eye0;
    float1 eye17;
    float3 noxel3;
    float2 q1;
    float3 q10;
    float1 q11;
    float3 q13;
    float1 q47;
    float1 q48;
    float3 q7;
    float1 q9;
    float3 r0;
    float3 r2;
    float3 t12;

    eye17.x = saturate(1 - (length(EyePos.xy - IN.texcoord_1.xy) / 8192));
    q1.xy = IN.texcoord_6.xy + Scroll.xy;
    noxel3.xyz = tex2D(NormalMap, q1.xy);
    r2.xyz = expand(noxel3.xyz);	// [0,1] to [-1,+1]
    r2.xy = sqr(eye17.x) * r2.xy;
    r0.xyz = normalize(r2.xyz);
    t12.xyz = tex2D(DetailMap, (0.1 * r0.xy) + q1.xy);
    eye0.xyz = EyePos.xyz - IN.texcoord_1.xyz;
    q48.x = shades(normalize(eye0.xyz), r0.xyz);
    q47.x = pow(abs(shades(reflect(normalize(eye0.xyz), r0.xyz), SunDir.xyz)), VarAmounts.x);
    q11.x = 1 - saturate((FogParam.x - length(eye0.xyz)) / FogParam.y);
    q7.xyz = (q48.x * (ShallowColor.rgb - DeepColor.rgb)) + DeepColor.rgb;			// partial precision
    q9.x = ((FresnelRI.x + 1) * ((1 - q48.x) * sqr(sqr(1 - q48.x)))) + FresnelRI.x;
    q10.xyz = (q9.x * ((((VarAmounts.y + 1) * (ReflectionColor.rgb - q7.xyz)) + q7.xyz) * VarAmounts.y)) + q7.xyz;
    q13.xyz = lerp(t12.xyz, saturate((saturate(SunDir.w) * (q47.x * SunColor.rgb)) + q10.xyz), eye17.x * VarAmounts.w);
    OUT.color_0.a = max(VarAmounts.z, q9.x);
    OUT.color_0.rgb = (q11.x * (FogColor.rgb - q13.xyz)) + q13.xyz;

    return OUT;
};

// approximately 57 instruction slots used (2 texture, 55 arithmetic)
