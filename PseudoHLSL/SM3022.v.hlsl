//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3022.vso /Fcshaderdump19/SM3022.vso.dis
//
//
// Parameters:
//
float3 EyePosition : register(c14);
row_major float4x4 ModelViewProj;
float Time : register(c19);
row_major float4x4 WorldViewTranspose;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   ModelViewProj[0]      const_0        1
//   ModelViewProj[1]      const_1        1
//   ModelViewProj[2]      const_2        1
//   ModelViewProj[3]      const_3        1
//   WorldViewTranspose[0] const_5        1
//   WorldViewTranspose[1] const_6        1
//   WorldViewTranspose[2] const_7        1
//   EyePosition        const_14      1
//   Time               const_19      1
//


// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float3 normal : NORMAL;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float4 texcoord_0 : TEXCOORD0;
    float texcoord_1 : TEXCOORD1;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

    float2 q19;
    float1 q2;

    q19.xy = mul(float2x4(WorldViewTranspose[0].xyzw, WorldViewTranspose[1].xyzw), IN.position.xyzw / 300);
    OUT.position.xyzw = mul(ModelViewProj, IN.position.xyzw);
    q2.x = dot(WorldViewTranspose[2].xyzw, IN.position.xyzw / 300);
    OUT.texcoord_0.w = max(q2.x * 0.02, 1);
    OUT.texcoord_0.xy = q19.xy - Time.x;
    OUT.texcoord_0.z = q2.x;
    OUT.texcoord_1.x = dot(IN.normal.xyz, normalize(EyePosition.xyz - IN.position.xyz));

    return OUT;
};

// approximately 17 instruction slots used
