//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2045.pso /Fcshaderdump19/SLS2045.pso.dis
//
//
// Parameters:

float4 AmbientColor;
samplerCUBE EnvironmentCubeMap;
sampler2D NormalMap;
float4 PSLightColor[4];
float4 Toggles;


// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   AmbientColor       const_1       1
//   PSLightColor[0]       const_2        1
//   Toggles            const_7       1
//   NormalMap          texture_0       1
//   EnvironmentCubeMap texture_1       1
//



// Structures:

struct VS_OUTPUT {
    float2 texcoord_0 : TEXCOORD0;			// partial precision
    float4 texcoord_1 : TEXCOORD1_centroid;			// partial precision
    float3 texcoord_2 : TEXCOORD2_centroid;			// partial precision
    float3 color_0 : COLOR0;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	PI	3.14159274
#define	D3DSINCOSCONST1	-1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
#define	D3DSINCOSCONST2	-0.020833334, -0.125, 1, 0.5

    const float4 const_0 = {-0.5, 3, 1, 0};

    float4 r0;
    float4 r1;

    r1.xyz = normalize(IN.texcoord_2.xyz);			// partial precision
    r0.xyzw = texCUBE(EnvironmentCubeMap, ((2 * dot(2 * (IN.texcoord_1.xyz - 0.5), r1.xyz)) * (2 * (IN.texcoord_1.xyz - 0.5))) - (r1.xyz * dot(2 * (IN.texcoord_1.xyz - 0.5), r0.xyz)));			// partial precision	// [0,1] to [-1,+1]
    r1.xyzw = tex2D(NormalMap, IN.texcoord_0.xy);			// partial precision
    r0.xyz = (r0.xyz * r1.w) * AmbientColor.a;			// partial precision
    r0.xyz = ((((Toggles.x <= 0.0 ? (r0.xyz * IN.color_0.rgb) : r0.xyz)) * PSLightColor[0].rgb) * IN.texcoord_1.w) * 3;			// partial precision
    r0.w = 1;
    OUT.color_0.rgba = r0.xyzw;			// partial precision

    return OUT;
};

// approximately 21 instruction slots used (2 texture, 19 arithmetic)
