//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/GRASS2003.pso /Fcshaderdump19/GRASS2003.pso.dis
//
//
// Parameters:

float4 AlphaTestRef;
sampler2D AttMap;
sampler2D DiffuseMap;
float4 PointLightColor;


// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   PointLightColor const_2       1
//   AlphaTestRef    const_3       1
//   DiffuseMap      texture_0       1
//   AttMap          texture_1       1
//



// Structures:

struct VS_OUTPUT {
    float2 texcoord_0 : TEXCOORD0;			// partial precision
    float3 texcoord_4 : TEXCOORD4_centroid;			// partial precision
    float4 texcoord_5 : TEXCOORD5_centroid;			// partial precision
    float4 texcoord_1 : TEXCOORD1;			// partial precision
    float4 color_0 : COLOR0;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	PI	3.14159274
#define	D3DSINCOSCONST1	-1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
#define	D3DSINCOSCONST2	-0.020833334, -0.125, 1, 0.5

    const float4 const_0 = {0, 1, 0.4, 0};

    float4 r0;
    float4 r1;
    float4 r2;

    r0.x = IN.texcoord_1.z;			// partial precision
    r0.y = IN.texcoord_1.w;			// partial precision
    r1.xyzw = tex2D(AttMap, r0.xy);			// partial precision
    r0.xyzw = tex2D(DiffuseMap, IN.texcoord_0.xy);			// partial precision
    r2.xyzw = tex2D(AttMap, IN.texcoord_1.xy);			// partial precision
    r1.xyz = (saturate((1 - r2.x) - r1.x) * (0.4 * PointLightColor.rgb)) + (IN.texcoord_5.xyz + IN.texcoord_4.xyz);			// partial precision
    r0.xyz = (r0.xyz * r1.xyz) + (((-r0.xyz * r1.xyz) + IN.color_0.rgb) * IN.color_0.a);			// partial precision
    r0.w = (((AlphaTestRef.x - r0.w) >= 0.0 ? 1 : 0)) * IN.texcoord_5.w;			// partial precision
    OUT.color_0.rgba = r0.xyzw;			// partial precision

    return OUT;
};

// approximately 19 instruction slots used (3 texture, 16 arithmetic)
