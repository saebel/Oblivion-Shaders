//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS1008.pso /Fcshaderdump19/SLS1008.pso.dis
//
//
// Parameters:
//
float3 LightColor[3];
sampler2D NormalMap;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   LightColor[0]   const_0       1
//   NormalMap    texture_0       1
//


// Structures:

struct VS_OUTPUT {
    float2 NormalUV : TEXCOORD0;
    float3 texcoord_1 : TEXCOORD1;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	expand(v)		(((v) - 0.5) / 0.5)
#define	compress(v)		(((v) * 0.5) + 0.5)
#define	shade(n, l)		max(dot(n, l), 0)
#define	shades(n, l)		saturate(dot(n, l))
#define	weight(v)		dot(v, 1)
#define	sqr(v)			((v) * (v))

    float1 q2;
    float4 r1;

    r1.xyzw = tex2D(NormalMap, IN.NormalUV.xy);
    q2.x = sqr(sqr(shades(expand(r1.xyz), expand(IN.texcoord_1.xyz))));
    OUT.color_0.a = r1.w * q2.x;
    OUT.color_0.rgb = r1.w * (sqr(q2.x) * LightColor[0].r);

    return OUT;
};

// approximately 13 instruction slots used (1 texture, 12 arithmetic)
