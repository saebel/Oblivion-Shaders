//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/NIGHTEYE000.pso /Fcshaderdump19/NIGHTEYE000.pso.dis
//
//
// Parameters:

float4 SpellInput;
sampler2D Src0;


// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   SpellInput   const_1       1
//   Src0         texture_0       1
//



// Structures:

struct VS_OUTPUT {
    float4 texcoord_0 : TEXCOORD0;
};

struct PS_OUTPUT {
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    const int4 const_0 = {1, 0, 0, -1};
    const float4 const_2 = {1, 1, 1, 0.5};
    const float4 const_3 = {0.21, 0.5, 0.78, 0};
    const int4 const_4 = {0, 0, 0, 1};

    float4 r0;
    float4 r1;

    IN.texcoord_0.xyzw = tex2D(Src0, IN.texcoord_0.xy);
    r1.xyzw = dot(const_0.xyz, SpellInput.xyz);
    IN.texcoord_0.w = -1 + r1.w;
    IN.texcoord_0.w = IN.texcoord_0.w * IN.texcoord_0.w;
    r1.xyz = dot(const_2.xyz, IN.texcoord_0.xyz) * const_3.xyz;
    IN.texcoord_0.w = (((-IN.texcoord_0.w * 0.5) + 0.5) > 0.5 ? 1 : 0);	// [-1,+1] to [0,1]
    r0.w = 1;
    r0.xyz = lerp(r1.xyz, IN.texcoord_0.xyz, IN.texcoord_0.w);

    return OUT;
};

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
