//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/STB1007.pso /Fcshaderdump19/STB1007.pso.dis
//
//
// Parameters:

float3 LightColor[3];
sampler2D NormalMap;


// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   LightColor   const_0       1
//   NormalMap    texture_0       1
//



// Structures:

struct VS_OUTPUT {
    float4 texcoord_0 : TEXCOORD0;
    float4 texcoord_1 : TEXCOORD1;
};

struct PS_OUTPUT {
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	PI	3.14159274
#define	D3DSINCOSCONST1	-1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
#define	D3DSINCOSCONST2	-0.020833334, -0.125, 1, 0.5

    const int4 const_1 = {1, 0, 0, 0};

    float4 r0;
    float4 r1;

    IN.texcoord_0.xyzw = tex2D(NormalMap, texcoord_0.xy);
    texcoord IN.texcoord_1
    r0.xyzw = saturate(dot(2 * ((IN.texcoord_0.xyz) - 0.5), 2 * ((IN.texcoord_1.xyz) - 0.5)));
    IN.texcoord_1.xyzw = dot(const_1.xyz, LightColor.rgb);
    r0.w = r0.w * r0.w;
    r0.w = r0.w * r0.w;
    r1.w = r0.w * r0.w;
    r0.w = IN.texcoord_0.w * r0.w;
  + r0.xyz = IN.texcoord_0.w * (r1.w * IN.texcoord_1.w);

    return OUT;
};

// approximately 9 instruction slots used (2 texture, 7 arithmetic)
