//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3016.vso /Fcshaderdump19/SM3016.vso.dis
//
//
// Parameters:
//
float4 Bones[54];
float4 FogColor;
float4 FogParam;
row_major float4x4 ObjToCubeMap;
row_major float4x4 SkinModelViewProj;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   SkinModelViewProj[0] const_1        1
//   SkinModelViewProj[1] const_2        1
//   SkinModelViewProj[2] const_3        1
//   SkinModelViewProj[3] const_4        1
//   ObjToCubeMap[0]      const_10       1
//   ObjToCubeMap[1]      const_11       1
//   ObjToCubeMap[2]      const_12       1
//   ObjToCubeMap[3]      const_13       1
//   FogParam          const_15      1
//   FogColor          const_16      1
//   Bones[0]             const_31      18
//   Bones[1]             const_32      18
//   Bones[2]             const_33      18
//


// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float4 texcoord_0 : TEXCOORD0;
    float3 blendweight : BLENDWEIGHT;
    float4 blendindices : BLENDINDICES;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float3 texcoord_6 : TEXCOORD6;
    float4 texcoord_1 : TEXCOORD1;
    float4 texcoord_2 : TEXCOORD2;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

#define	weight(v)		dot(v, 1)
#define	sqr(v)			((v) * (v))

    const float4 const_0 = {1, 765.01001, 0, 0};

    float3 mdl12;
    float4 offset;
    float4 q0;
    float1 q1;
    float3 q10;
    float3 q11;
    float3 q7;
    float3 q8;
    float3 q9;
    float4 r0;

    offset.xyzw = 765.01001 * IN.blendindices.zyxw;
    r0.w = 1;
    q0.xyzw = (IN.position.xyzx * const_0.xxxz) + const_0.zzzx;
    q11.xyz = mul(float3x4(Bones[0 + offset.w].xyzw, Bones[1 + offset.w].xyzw, Bones[2 + offset.w].xyzw), q0.xyzw);
    q9.xyz = mul(float3x4(Bones[0 + offset.z].xyzw, Bones[1 + offset.z].xyzw, Bones[2 + offset.z].xyzw), q0.xyzw);
    q8.xyz = mul(float3x4(Bones[0 + offset.x].xyzw, Bones[1 + offset.x].xyzw, Bones[2 + offset.x].xyzw), q0.xyzw);
    q7.xyz = mul(float3x4(Bones[0 + offset.y].xyzw, Bones[1 + offset.y].xyzw, Bones[2 + offset.y].xyzw), q0.xyzw);
    q10.xyz = (IN.blendweight.z * q9.xyz) + ((IN.blendweight.x * q8.xyz) + (q7.xyz * IN.blendweight.y));
    r0.xyz = ((1 - weight(IN.blendweight.xyz)) * q11.xyz) + q10.xyz;
    mdl12.xyz = mul(float3x4(SkinModelViewProj[0].xyzw, SkinModelViewProj[1].xyzw, SkinModelViewProj[2].xyzw), r0.xyzw);
    OUT.position.w = dot(SkinModelViewProj[3].xyzw, r0.xyzw);
    OUT.position.xyz = mdl12.xyz;
    OUT.texcoord_0.xy = IN.texcoord_0.xy;
    OUT.texcoord_1.xyzw = mul(ObjToCubeMap, r0.xyzw);
    q1.x = 1 - saturate((FogParam.x - length(mdl12.xyz)) / FogParam.y);
    OUT.texcoord_2.xyz = FogColor.rgb;
    OUT.texcoord_2.w = q1.x * FogParam.z;
    OUT.texcoord_6.xyz = r0.xyz;

    return OUT;
};

// approximately 44 instruction slots used
