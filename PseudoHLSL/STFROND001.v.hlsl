//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/STFROND001.vso /Fcshaderdump19/STFROND001.vso.dis
//
//
// Parameters:
//
float4 AmbientColor : register(c5);
float4 DiffColor : register(c6);
float3 FogColor : register(c15);
float4 FogParam : register(c14);
float4 LightVector : register(c8);
row_major float4x4 ModelViewProj : register(c0);
float SunDimmer : register(c16);
float4 WindMatrices[16] : register(c18);
//
//
// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   ModelViewProj[0] const_0        1
//   ModelViewProj[1] const_1        1
//   ModelViewProj[2] const_2        1
//   ModelViewProj[3] const_3        1
//   AmbientColor  const_5       1
//   DiffColor     const_6       1
//   LightVector   const_8       1
//   FogParam      const_14      1
//   FogColor      const_15      1
//   SunDimmer     const_16      1
//   WindMatrices[0]  const_18      4
//   WindMatrices[1]  const_19      4
//   WindMatrices[2]  const_20      4
//   WindMatrices[3]  const_21      4
//


// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float3 normal : NORMAL;
    float4 texcoord_0 : TEXCOORD0;
    float4 color_0 : COLOR0;
    float4 blendindices : BLENDINDICES;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float3 texcoord_1 : TEXCOORD1;
    float4 texcoord_2 : TEXCOORD2;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

#define	shade(n, l)		max(dot(n, l), 0)
#define	shades(n, l)		saturate(dot(n, l))

    float3 mdl13;
    float1 q0;
    float3 q1;
    float4 q3;
    float4 q4;

    q0.x = IN.blendindices.y;
    q3.xyzw = mul(float4x4(WindMatrices[0 + q0.x].xyzw, WindMatrices[1 + q0.x].xyzw, WindMatrices[2 + q0.x].xyzw, WindMatrices[3 + q0.x].xyzw), IN.position.xyzw);
    q1.xyz = (SunDimmer.x * (shades(IN.normal.xyz, LightVector.xyz) * DiffColor.rgb)) + AmbientColor.rgb;
    q4.xyzw = (IN.blendindices.x * (q3.xyzw - IN.position.xyzw)) + IN.position.xyzw;
    mdl13.xyz = mul(float3x4(ModelViewProj[0].xyzw, ModelViewProj[1].xyzw, ModelViewProj[2].xyzw), q4.xyzw);
    OUT.position.w = dot(ModelViewProj[3].xyzw, q4.xyzw);
    OUT.position.xyz = mdl13.xyz;
    OUT.texcoord_0.xy = IN.texcoord_0.xy;
    OUT.texcoord_1.xyz = q1.xyz * IN.color_0.rgb;
    OUT.texcoord_2.w = 1 - saturate((FogParam.x - length(mdl13.xyz)) / FogParam.y);
    OUT.texcoord_2.xyz = FogColor.rgb;

    return OUT;
};

// approximately 31 instruction slots used
