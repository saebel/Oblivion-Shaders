//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATER007.pso /Fcshaderdump19/WATER007.pso.dis
//
//
// Parameters:
//
float2 BlendRadius;
float4 DeepColor;
sampler2D DepthMap;
sampler2D DetailMap;
sampler2D DisplacementMap;
float4 EyePos;
float4 FogColor;
float4 FogParam;
float FresnelRI;
sampler2D NormalMap;
float4 ReflectionColor;
sampler2D ReflectionMap;
float2 Scroll;
float4 ShallowColor;
float4 SunColor;
float4 SunDir;
float4 VarAmounts;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Scroll          const_0       1
//   EyePos          const_1       1
//   SunDir          const_2       1
//   SunColor        const_3       1
//   ShallowColor    const_5       1
//   DeepColor       const_6       1
//   ReflectionColor const_7       1
//   VarAmounts      const_8       1
//   FogParam        const_9       1
//   FogColor        const_10      1
//   FresnelRI       const_11      1
//   BlendRadius     const_12      1
//   ReflectionMap   texture_0       1
//   NormalMap       texture_1       1
//   DetailMap       texture_2       1
//   DepthMap        texture_3       1
//   DisplacementMap texture_4       1
//


// Structures:

struct VS_OUTPUT {
    float3 texcoord_0 : TEXCOORD0_centroid;
    float3 texcoord_1 : TEXCOORD1_centroid;
    float4 texcoord_2 : TEXCOORD2_centroid;
    float4 texcoord_3 : TEXCOORD3_centroid;
    float4 texcoord_4 : TEXCOORD4_centroid;
    float4 texcoord_5 : TEXCOORD5_centroid;
    float4 texcoord_6 : TEXCOORD6;
    float4 texcoord_7 : TEXCOORD7;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	expand(v)		(((v) - 0.5) / 0.5)
#define	compress(v)		(((v) * 0.5) + 0.5)
#define	shade(n, l)		max(dot(n, l), 0)
#define	shades(n, l)		saturate(dot(n, l))
#define	weight(v)		dot(v, 1)
#define	sqr(v)			((v) * (v))

    const float4 const_15 = {2, -1, 0, -(1.0 / 8192)};

    float1 depth34;
    float1 eye23;
    float3 eye7;
    float3 noxel0;
    float1 q13;
    float1 q14;
    float1 q15;
    float1 q16;
    float1 q18;
    float1 q19;
    float2 q21;
    float3 q40;
    float3 q41;
    float1 q5;
    float1 q52;
    float1 q53;
    float4 q55;
    float1 q6;
    float4 r0;
    float4 r1;
    float3 r2;
    float3 r3;
    float3 r4;
    float2 r5;
    float3 t56;
    float3 t57;

    r0.xyzw = tex2D(DisplacementMap, IN.texcoord_6.xy);
    depth34.x = tex2D(DepthMap, IN.texcoord_6.zw);
    eye23.x = length(EyePos.xy - IN.texcoord_1.xy);
    q6.x = saturate(1 - (eye23.x / 8192));
    r5.xy = const_15.xy;
    q21.xy = IN.texcoord_7.zw + Scroll.xy;
    noxel0.xyz = tex2D(NormalMap, q21.xy);
    r2.xyz = expand(noxel0.xyz);	// [0,1] to [-1,+1]
    r2.xy = sqr(q6.x) * r2.xy;
    r1.z = IN.texcoord_0.z;
    eye7.xyz = EyePos.xyz - IN.texcoord_1.xyz;
    q5.x = 1 - saturate(max(0.1, (2 * length(IN.texcoord_6.xy - 0.5)) / BlendRadius.x));
    r3.xyz = normalize(lerp(expand(r0.xyz), r2.xyz, q5.x * BlendRadius.y));
    t57.xyz = tex2D(DetailMap, (0.1 * r3.xy) + q21.xy);
    q53.x = shades(normalize(eye7.xyz), r3.xyz);
    q52.x = pow(abs(shades(reflect(normalize(eye7.xyz), r3.xyz), SunDir.xyz)), VarAmounts.x);
    q15.x = 1 - saturate((FogParam.x - length(eye7.xyz)) / FogParam.y);
    q18.x = 1 - ((depth34.x - 0.2) / 0.35);
    r1.w = 1;
    r4.xyz = (q53.x * (ShallowColor.rgb - DeepColor.rgb)) + DeepColor.rgb;			// partial precision
    q13.x = ((FresnelRI.x - r5.y) * ((1 - q53.x) * sqr(sqr(1 - q53.x)))) + FresnelRI.x;
    q14.x = max(VarAmounts.z, q13.x);
    q16.x = (depth34.x >= 1 ? q14.x : (((1 - depth34.x) * (0.25 - q14.x)) + q14.x));
    q19.x = (depth34.x >= 0.2 ? (depth34.x >= 0.55 ? q16.x : (q16.x * (1 - (q18.x * sqr(q18.x))))) : 0);
    r1.xy = (((saturate(eye23.x * 0.0002) * 2496) + 4) * r3.xy) + IN.texcoord_0.xy;
    q55.xyzw = mul(float4x4(IN.texcoord_2.xyzw, IN.texcoord_3.xyzw, IN.texcoord_4.xyzw, IN.texcoord_5.xyzw), r1.xyzw);
    t56.xyz = tex2Dproj(ReflectionMap, q55.xyzw);			// partial precision
    q40.xyz = lerp((VarAmounts.y * (t56.xyz - ReflectionColor.rgb)) + ReflectionColor.rgb, r4.xyz, q13.x);
    q41.xyz = lerp(t57.xyz, (saturate(SunDir.w) * (q52.x * SunColor.rgb)) + q40.xyz, q6.x * VarAmounts.w);
    r1.xyz = (q15.x * (FogColor.rgb - q41.xyz)) + q41.xyz;
    r1.w = ((BlendRadius.x - (r5.x * length(IN.texcoord_6.xy - 0.5))) >= 0.0 ? q19.x : 0);
    r0.xyzw = (depth34.x <= 0.0 ? 0 : r1.xyzw);
    OUT.color_0.a = r0.w;
    OUT.color_0.rgb = r0.xyz;

    return OUT;
};

// approximately 101 instruction slots used (5 texture, 96 arithmetic)
