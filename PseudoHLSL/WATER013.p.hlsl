//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATER013.pso /Fcshaderdump19/WATER013.pso.dis
//
//
// Parameters:

float4 DeepColor;
float4 EyePos;
float4 FogColor;
float4 FogParam;
float FresnelRI;
float4 ReflectionColor;
float4 ShallowColor;
float4 SunColor;
float4 SunDir;
float4 VarAmounts;


// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   EyePos          const_1       1
//   SunDir          const_2       1
//   SunColor        const_3       1
//   ShallowColor    const_5       1
//   DeepColor       const_6       1
//   ReflectionColor const_7       1
//   VarAmounts      const_8       1
//   FogParam        const_9       1
//   FogColor        const_10      1
//   FresnelRI       const_11      1
//



// Structures:

struct VS_OUTPUT {
    float3 texcoord_1 : TEXCOORD1_centroid;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	PI	3.14159274
#define	D3DSINCOSCONST1	-1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
#define	D3DSINCOSCONST2	-0.020833334, -0.125, 1, 0.5

    const int4 const_0 = {1, 1, -1, 0};

    float4 r0;
    float4 r1;
    float4 r2;
    float4 r4;

    r0.xyz = EyePos.xyz - IN.texcoord_1.xyz;
    r0.w = 1.0 / length(r0.xyz);
    r0.xyz = r0.xyz * r0.w;
    r4.w = 1.0 / r0.w;
    r0.w = saturate(r0.z);
    r1.w = 1 - r0.w;
    r2.w = r1.w * r1.w;
    r2.w = ((1 - FresnelRI.x) * (r1.w * (r2.w * r2.w))) + FresnelRI.x;
    r1.xyz = (r0.w * (ShallowColor.rgb - DeepColor.rgb)) + DeepColor.rgb;			// partial precision
    r0.xyz = pow(abs(saturate(dot(r0.xyz * -const_0.xyz, SunDir.xyz))), VarAmounts.x) * SunColor.rgb;
    r1.xyz = (r2.w * ((((1 - VarAmounts.y) * (ReflectionColor.rgb - r1.xyz)) + r1.xyz) * VarAmounts.y)) + r1.xyz;
    r1.xyz = saturate((saturate(SunDir.w) * r0) + r1);
    r0.w = max(VarAmounts.z, r2.w);
    r0.xyz = ((1 - saturate((FogParam.x - r4.w) / FogParam.y)) * (FogColor.rgb - r1.xyz)) + r1.xyz;
    OUT.color_0.rgba = r0.xyzw;

    return OUT;
};

// approximately 37 instruction slots used
