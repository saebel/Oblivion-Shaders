//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/SLS2077.pso /Fcshaderdump19/SLS2077.pso.dis
//
//
// Parameters:

sampler2D BaseMap;
float4 PSLightColor[4];
sampler2D ShadowMap;


// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   PSLightColor[0] const_2        1
//   BaseMap      texture_0       1
//   ShadowMap    texture_6       1
//



// Structures:

struct VS_OUTPUT {
    float2 texcoord_0 : TEXCOORD0;			// partial precision
    float3 texcoord_6 : TEXCOORD6_centroid;
    float4 texcoord_1 : TEXCOORD1_centroid;			// partial precision
    float4 texcoord_2 : TEXCOORD2_centroid;
    float4 texcoord_3 : TEXCOORD3;			// partial precision
};

struct PS_OUTPUT {
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    const float4 const_0 = {0.5, 1, 15, 0};
    const float4 const_1 = {-0.000195312503, 0.01, 0.6, 0};
    const int4 const_3 = {1, -1, 0, 0};
    const int4 const_4 = {0, 1, 0, 0};

    r0.w = 1.0 / IN.texcoord_1.w;			// partial precision
    r0.xy = r0.w * IN.texcoord_1;
    r0.xy = (0.5 * r0) + 0.5;
    r0.w = 1 - r0.y;
    r0.z = 1 - r0.y;
    r1.xyz = IN.texcoord_2;
    r1.xyz = IN.texcoord_6 - r1.xyz;
    r1.x = dot(r1.xyz, r1.xyz);	// normalize + length
    r1.w = 1.0 / sqrt(r1.x);
    r1.w = 1.0 / r1.w;
    r2.w = IN.texcoord_2.w * 0.5;
    r2.w = 1.0 / r2.w;
    r2.xy = const_3.xy;
    r3.w = saturate(r1.w * r2.w);
    r1.w = 1.0 / sqrt(r3.w);
    r1.w = 1.0 / r1.w;
    r2.w = 1 - r1.w;
    r1.w = (r1.w <= 0.0 ? r2.w : 1);
    r1.x = saturate((r0.x >= 0.0 ? 0 : r0.x));
    r0.xy = (r2.xy * r0.xy) + const_4.xy;
    r1.y = saturate((r0.z >= 0.0 ? 0 : r0.w));
    r0.w = r1.w * 15;			// partial precision
    r0.w = 1.0 / r0.w;			// partial precision
    r0.xy = saturate((r0.w * 0.01) + r0);
    r0.xyzw = tex2D(BaseMap, IN.texcoord_0);			// partial precision
    r0.z = 1;
    r1.xyzw = tex2D(ShadowMap, r0);
    r2.xyzw = tex2D(ShadowMap, r1);
    r2.w = 1.0 / IN.texcoord_2.w;
    r1.w = (IN.texcoord_1.z * -r2.w) + r2.x;
    r1.w = -0.000195312503 - r1.w;
    r1.w = (r1.w >= 0.0 ? 1 : 0);			// partial precision
    r2.w = (IN.texcoord_1.z * -r2.w) + r1.x;
    r3.w = r3.w * r3.w;
    r1.xyz = lerp(1, r0, r3.w);			// partial precision
    r2.w = -0.000195312503 - r2.w;
    r2.w = (r2.w >= 0.0 ? 1 : 0);			// partial precision
    r1.w = saturate(r1.w + r2.w);			// partial precision
    r1.w = r1.w - 1;			// partial precision
    r1.w = (PSLightColor[0].a * r1.w) + r0.z;			// partial precision
    r2.w = 1 - r1.w;			// partial precision
    r1.w = r2.w * 0.6;			// partial precision
    r0.xyz = (r1.w * -PSLightColor[0]) + r0.z;			// partial precision
    r0.xyz = lerp(1, r1, IN.texcoord_3.w);			// partial precision
    r1.w = min(r0.w, 1);			// partial precision
    r0.w = min(r1.w, r2.w);			// partial precision
    OUT.color_0.rgba = r0.xyzw;			// partial precision

    return OUT;
};

// approximately 49 instruction slots used (3 texture, 46 arithmetic)
