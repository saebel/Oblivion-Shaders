//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/PAR2021.pso /Fcshaderdump19/PAR2021.pso.dis
//
//
// Parameters:
//
sampler2D AttenuationMap : register(s3);
sampler2D BaseMap : register(s1);
sampler2D NormalMap : register(s0);
float4 PSLightColor[4] : register(c2);
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   PSLightColor[0]   const_2        1
//   PSLightColor[1]   const_3        1
//   PSLightColor[2]   const_4        1
//   NormalMap      texture_0       1
//   BaseMap        texture_1       1
//   AttenuationMap texture_3       1
//


// Structures:

struct VS_OUTPUT {
    float2 BaseUV : TEXCOORD0;
    float3 texcoord_1 : TEXCOORD1_centroid;
    float3 texcoord_2 : TEXCOORD2_centroid;
    float3 texcoord_3 : TEXCOORD3_centroid;
    float4 texcoord_4 : TEXCOORD4;
    float4 texcoord_5 : TEXCOORD5;
    float4 texcoord_6 : TEXCOORD6;
    float3 texcoord_7 : TEXCOORD7_centroid;
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

#define	expand(v)		(((v) - 0.5) / 0.5)
#define	compress(v)		(((v) * 0.5) + 0.5)
#define	uvtile(w)		(((w) * 0.04) - 0.02)
#define	shade(n, l)		max(dot(n, l), 0)
#define	shades(n, l)		saturate(dot(n, l))

    float1 att0;
    float1 att1;
    float1 att16;
    float1 att3;
    float1 att5;
    float1 att6;
    float3 q19;
    float3 q2;
    float3 q8;
    float4 r0;
    float3 r2;
    float4 r6;
    float2 uv14;

    r0.xyzw = tex2D(BaseMap, IN.BaseUV.xy);			// partial precision
    att6.x = tex2D(AttenuationMap, IN.texcoord_6.zw);			// partial precision
    att5.x = tex2D(AttenuationMap, IN.texcoord_6.xy);			// partial precision
    att3.x = tex2D(AttenuationMap, IN.texcoord_4.zw);			// partial precision
    att1.x = tex2D(AttenuationMap, IN.texcoord_4.xy);			// partial precision
    att0.x = tex2D(AttenuationMap, IN.texcoord_5.xy);			// partial precision
    att16.x = tex2D(AttenuationMap, IN.texcoord_5.zw);			// partial precision
    uv14.xy = (uvtile(r0.w) * (IN.texcoord_7.xy / length(IN.texcoord_7.xyz))) + IN.BaseUV.xy;
    r6.xyzw = tex2D(NormalMap, uv14.xy);			// partial precision
    q2.xyz = normalize(expand(r6.xyz));			// partial precision
    r0.xyz = shades(q2.xyz, normalize(IN.texcoord_3.xyz)) * PSLightColor[2].rgb;			// partial precision
    r2.xyz = shades(q2.xyz, normalize(IN.texcoord_1.xyz)) * PSLightColor[0].rgb;			// partial precision
    q19.xyz = saturate((1 - att0.x) - att16.x) * (shades(q2.xyz, normalize(IN.texcoord_2.xyz)) * PSLightColor[1].rgb);			// partial precision
    q8.xyz = (saturate((1 - att5.x) - att6.x) * r0.xyz) + ((saturate((1 - att1.x) - att3.x) * r2.xyz) + q19.xyz);			// partial precision
    OUT.color_0.a = 1;			// partial precision
    OUT.color_0.rgb = q8.xyz;			// partial precision

    return OUT;
};

// approximately 50 instruction slots used (8 texture, 42 arithmetic)
