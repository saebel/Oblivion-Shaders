//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2068.pso /Fcshaderdump19/SLS2068.pso.dis
//
//
// Parameters:

float4 AmbientColor;
sampler2D BaseMap;
sampler2D NormalMap;
float4 PSLightColor[4];
sampler2D ShadowMap;


// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   AmbientColor const_1       1
//   PSLightColor[0] const_2        1
//   BaseMap      texture_0       1
//   NormalMap    texture_1       1
//   ShadowMap    texture_2       1
//



// Structures:

struct VS_OUTPUT {
    float2 texcoord_0 : TEXCOORD0;
    float2 texcoord_1 : TEXCOORD1;			// partial precision
    float4 texcoord_2 : TEXCOORD2_centroid;			// partial precision
    float3 texcoord_3 : TEXCOORD3_centroid;			// partial precision
};

struct PS_OUTPUT {
    float4 color_0 : COLOR0;
};

// Code:

PS_OUTPUT main(VS_OUTPUT IN) {
    PS_OUTPUT OUT;

    const float4 const_0 = {-0.5, 20, 0.5, 0};

    float4 r0;
    float4 r1;

    r0.xyzw = tex2D(BaseMap, IN.texcoord_0.xy);			// partial precision
    r1.xyzw = tex2D(NormalMap, IN.texcoord_1.xy);
    r1.xyz = (saturate(dot(normalize(2 * (r1.xyz - 0.5)), IN.texcoord_3.xyz)) * PSLightColor[0].rgb) + AmbientColor.rgb;			// partial precision	// [0,1] to [-1,+1]
    r1.xyz = r1.xyz * (r0.xyz * IN.texcoord_2.xyz);			// partial precision
    r0.xyzw = tex2D(ShadowMap, IN.texcoord_0.xy * 20);
    r0.w = IN.texcoord_2.w;			// partial precision
    r0.xyz = r1.xyz * ((r0.x * 0.5) + 0.5);			// partial precision	// [-1,+1] to [0,1]
    OUT.color_0.rgba = r0.xyzw;			// partial precision

    return OUT;
};

// approximately 18 instruction slots used (3 texture, 15 arithmetic)
