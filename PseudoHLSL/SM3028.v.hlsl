//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3028.vso /Fcshaderdump19/SM3028.vso.dis
//
//
// Parameters:

float4 EyePosition;
float3 FogColor;
float4 FogParam;
row_major float4x4 ModelViewProj;
float UOffset;
float VOffset;


// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   ModelViewProj[0] const_0        1
//   ModelViewProj[1] const_1        1
//   ModelViewProj[2] const_2        1
//   ModelViewProj[3] const_3        1
//   EyePosition   const_8       1
//   UOffset       const_9       1
//   VOffset       const_10      1
//   FogParam      const_12      1
//   FogColor      const_13      1
//



// Structures:

struct VS_INPUT {
    float4 position : POSITION;
    float3 tangent : TANGENT;
    float3 binormal : BINORMAL;
    float3 normal : NORMAL;
    float4 texcoord_0 : TEXCOORD0;
};

struct VS_OUTPUT {
    float4 position : POSITION;
    float2 texcoord_0 : TEXCOORD0;
    float2 texcoord_1 : TEXCOORD1;
    float3 texcoord_3 : TEXCOORD3;
    float4 color_1 : COLOR1;
};

// Code:

VS_OUTPUT main(VS_INPUT IN) {
    VS_OUTPUT OUT;

#define	PI	3.14159274
#define	D3DSINCOSCONST1	-1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
#define	D3DSINCOSCONST2	-0.020833334, -0.125, 1, 0.5

    const float4 const_4 = {0.025, 0.0208350997, -0.0851330012, 0.180141002};
    const float4 const_5 = {-0.330299497, 0.999866009, -2, PI / 2};
    const float4 const_6 = {-PI, 0.318471342, 1, 0};

    float4 r0;
    float3 r1;
    float4 r2;

    r0.w = (1.0 / max(abs(IN.position.y), abs(IN.position.x))) * min(abs(IN.position.y), abs(IN.position.x));
    r0.z = r0.w * r0.w;
    r0.y = r0.w * ((r0.z * ((r0.z * ((r0.z * ((r0.z * 0.0208350997) - 0.0851330012)) + 0.180141002)) - 0.330299497)) + 0.999866009);
    r0.x = ((IN.position.y < -IN.position.y ? 1.0 : 0.0) * -PI) + ((((r0.y * -2) + PI / 2) * ((abs(IN.position.y) < abs(IN.position.x) ? 1.0 : 0.0))) + r0.y);
    r0.w = min(IN.position.y, IN.position.x);
    r0.z = max(IN.position.y, IN.position.x);
    r2.yw = const_6.yw;
    OUT.texcoord_1.y = (IN.position.z * 0.025) + UOffset.x;
    OUT.texcoord_1.x = (((((r0.w < -r0.w ? 1.0 : 0.0) * (r0.z >= -r0.z ? 1.0 : 0.0)) * -(2 * r0.x)) + r0.x) * r2.y) + VOffset.x;
    r0.x = dot(ModelViewProj[0].xyzw, IN.position.xyzw);
    r0.y = dot(ModelViewProj[1].xyzw, IN.position.xyzw);
    r0.z = dot(ModelViewProj[2].xyzw, IN.position.xyzw);
    r1.xyz = EyePosition.xyz - IN.position.xyz;
    r2.xyz = (-2 * (r1.xyz * ((dot(IN.normal.xyz, r1.xyz) < 1 ? 1.0 : 0.0)))) + r1.xyz;
    r1.x = dot(IN.tangent.xyz, r2.xyz);
    r1.y = dot(IN.binormal.xyz, r2.xyz);
    r1.z = dot(IN.normal.xyz, r2.xyz);
    OUT.position.w = dot(ModelViewProj[3].xyzw, IN.position.xyzw);
    OUT.texcoord_3.xyz = normalize(r1.xyz);
    OUT.position.xyz = r0.xyz;
    OUT.color_1.a = (1 - saturate((FogParam.x - length(r0.xyz)) / FogParam.y)) * (r2.w < FogParam.z ? 1.0 : 0.0);
    OUT.texcoord_0.xy = IN.texcoord_0.xy;
    OUT.color_1.rgb = FogColor.rgb;

    return OUT;
};

// approximately 53 instruction slots used
