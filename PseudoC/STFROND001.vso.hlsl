//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/STFROND001.vso /Fcshaderdump19/STFROND001.vso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   float4 DiffColor;
//   float3 FogColor;
//   float4 FogParam;
//   float4 LightVector;
//   row_major float4x4 ModelViewProj;
//   float SunDimmer;
//   float4 WindMatrices[16];
//
//
// Registers:
//
//   Name          Reg   Size
//   ------------- ----- ----
//   ModelViewProj[0] ModelViewProj[0]       1
//   ModelViewProj[1] ModelViewProj[1]       1
//   ModelViewProj[2] ModelViewProj[2]       1
//   ModelViewProj[3] ModelViewProj[3]       1
//   AmbientColor  AmbientColor       1
//   DiffColor     DiffColor       1
//   LightVector   LightVector       1
//   FogParam      FogParam      1
//   FogColor      FogColor      1
//   SunDimmer     SunDimmer      1
//   WindMatrices[00]  WindMatrices[00]      1
//   WindMatrices[01]  WindMatrices[01]      1
//   WindMatrices[02]  WindMatrices[02]      1
//   WindMatrices[03]  WindMatrices[03]      1
//   WindMatrices[04]  WindMatrices[04]      1
//   WindMatrices[05]  WindMatrices[05]      1
//   WindMatrices[06]  WindMatrices[06]      1
//   WindMatrices[07]  WindMatrices[07]      1
//   WindMatrices[08]  WindMatrices[08]      1
//   WindMatrices[09]  WindMatrices[09]      1
//   WindMatrices[10]  WindMatrices[10]      1
//   WindMatrices[11]  WindMatrices[11]      1
//   WindMatrices[12]  WindMatrices[12]      1
//   WindMatrices[13]  WindMatrices[13]      1
//   WindMatrices[14]  WindMatrices[14]      1
//   WindMatrices[15]  WindMatrices[15]      1
//

    const_4 = {0, 1, 0, 0};
    position input_0;
    normal input_1;
    texcoord input_2;
    color input_3;
    dcl_blendindices input_4
    a0.x = input_4.y;
    r0.x = (WindMatrices[00][a0.x].x * input_0.x) + (WindMatrices[00][a0.x].y * input_0.y) + (WindMatrices[00][a0.x].z * input_0.z) + (WindMatrices[00][a0.x].w * input_0.w);
    r0.y = (WindMatrices[01][a0.x].x * input_0.x) + (WindMatrices[01][a0.x].y * input_0.y) + (WindMatrices[01][a0.x].z * input_0.z) + (WindMatrices[01][a0.x].w * input_0.w);
    r0.z = (WindMatrices[02][a0.x].x * input_0.x) + (WindMatrices[02][a0.x].y * input_0.y) + (WindMatrices[02][a0.x].z * input_0.z) + (WindMatrices[02][a0.x].w * input_0.w);
    r0.w = (WindMatrices[03][a0.x].x * input_0.x) + (WindMatrices[03][a0.x].y * input_0.y) + (WindMatrices[03][a0.x].z * input_0.z) + (WindMatrices[03][a0.x].w * input_0.w);
    r0 = r0 - input_0;
    r1 = input_0;
    r0 = (input_4.x * r0) + r1;
    position.w = (ModelViewProj[3].x * r0.x) + (ModelViewProj[3].y * r0.y) + (ModelViewProj[3].z * r0.z) + (ModelViewProj[3].w * r0.w);
    r1.x = (ModelViewProj[0].x * r0.x) + (ModelViewProj[0].y * r0.y) + (ModelViewProj[0].z * r0.z) + (ModelViewProj[0].w * r0.w);
    r1.y = (ModelViewProj[1].x * r0.x) + (ModelViewProj[1].y * r0.y) + (ModelViewProj[1].z * r0.z) + (ModelViewProj[1].w * r0.w);
    r1.z = (ModelViewProj[2].x * r0.x) + (ModelViewProj[2].y * r0.y) + (ModelViewProj[2].z * r0.z) + (ModelViewProj[2].w * r0.w);
    r2.x = (input_1.x * LightVector.x) + (input_1.y * LightVector.y) + (input_1.z * LightVector.z);
    r0.x = (r1.x * r1.x) + (r1.y * r1.y) + (r1.z * r1.z);
    r1.w = (r2.x >= const_4.x ? r2.x : const_4.x);
    r0.w = 1.0 / sqrt(r0.x);
    r2.w = (r1.w < const_4.y ? r1.w : const_4.y);
    r0.w = 1.0 / r0.w;
    r0.w = FogParam.x - r0.w;
    r1.w = 1.0 / FogParam.y;
    r0.xyz = r2.w * DiffColor;
    r0.w = r0.w * r1.w;
    r1.w = SunDimmer.x;
    r0.xyz = (r1.w * r0) + AmbientColor;
    r0.w = (r0.w >= const_4.x ? r0.w : const_4.x);
    texcoord_1.xyz = r0 * input_3;
    r0.w = (r0.w < const_4.y ? r0.w : const_4.y);
    position.xyz = r1;
    texcoord_2.w = const_4.y - r0.w;
    texcoord_0.xy = input_2;
    texcoord_2.xyz = FogColor;

// approximately 31 instruction slots used
