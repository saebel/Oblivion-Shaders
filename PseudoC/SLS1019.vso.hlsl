//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS1019.vso /Fcshaderdump19/SLS1019.vso.dis
//
//
// Parameters:
//
//   float4 EyePosition;
//   row_major float4x4 ModelViewProj;
//   row_major float4x4 ObjToCubeSpace;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   ModelViewProj[0]  ModelViewProj[0]       1
//   ModelViewProj[1]  ModelViewProj[1]       1
//   ModelViewProj[2]  ModelViewProj[2]       1
//   ModelViewProj[3]  ModelViewProj[3]       1
//   ObjToCubeSpace const_8       3
//   EyePosition    EyePosition      1
//

    const_4 = {0.100000001, 0, 0, 0};
    position input_0;
    texcoord input_1;
    normal input_2;
    tangent input_3;
    binormal input_4;
    color input_5;
    position.x = (ModelViewProj[0].x * input_0.x) + (ModelViewProj[0].y * input_0.y) + (ModelViewProj[0].z * input_0.z) + (ModelViewProj[0].w * input_0.w);
    position.y = (ModelViewProj[1].x * input_0.x) + (ModelViewProj[1].y * input_0.y) + (ModelViewProj[1].z * input_0.z) + (ModelViewProj[1].w * input_0.w);
    position.z = (ModelViewProj[2].x * input_0.x) + (ModelViewProj[2].y * input_0.y) + (ModelViewProj[2].z * input_0.z) + (ModelViewProj[2].w * input_0.w);
    position.w = (ModelViewProj[3].x * input_0.x) + (ModelViewProj[3].y * input_0.y) + (ModelViewProj[3].z * input_0.z) + (ModelViewProj[3].w * input_0.w);
    r0.xyz = input_3 * const_4.x;
    texcoord_1.x = (r0.x * const_8.x) + (r0.y * const_8.y) + (r0.z * const_8.z);
    r1.xyz = input_4 * const_4.x;
    texcoord_1.y = (r1.x * const_8.x) + (r1.y * const_8.y) + (r1.z * const_8.z);
    texcoord_1.z = (input_2.x * const_8.x) + (input_2.y * const_8.y) + (input_2.z * const_8.z);
    texcoord_2.x = (r0.x * const_9.x) + (r0.y * const_9.y) + (r0.z * const_9.z);
    texcoord_3.x = (r0.x * ModelViewProj[1]0.x) + (r0.y * ModelViewProj[1]0.y) + (r0.z * ModelViewProj[1]0.z);
    texcoord_2.y = (r1.x * const_9.x) + (r1.y * const_9.y) + (r1.z * const_9.z);
    r0.x = (const_8.x * input_0.x) + (const_8.y * input_0.y) + (const_8.z * input_0.z) + (const_8.w * input_0.w);
    r0.y = (const_9.x * input_0.x) + (const_9.y * input_0.y) + (const_9.z * input_0.z) + (const_9.w * input_0.w);
    r0.z = (ModelViewProj[1]0.x * input_0.x) + (ModelViewProj[1]0.y * input_0.y) + (ModelViewProj[1]0.z * input_0.z) + (ModelViewProj[1]0.w * input_0.w);
    texcoord_3.y = (r1.x * ModelViewProj[1]0.x) + (r1.y * ModelViewProj[1]0.y) + (r1.z * ModelViewProj[1]0.z);
    r0.xyz = EyePosition - r0;
    texcoord_2.z = (input_2.x * const_9.x) + (input_2.y * const_9.y) + (input_2.z * const_9.z);
    r1.x = (r0.x * r0.x) + (r0.y * r0.y) + (r0.z * r0.z);
    texcoord_3.z = (input_2.x * ModelViewProj[1]0.x) + (input_2.y * ModelViewProj[1]0.y) + (input_2.z * ModelViewProj[1]0.z);
    r0.w = 1.0 / sqrt(r1.x);
    texcoord_0.xy = input_1;
    r0.xyz = r0 * r0.w;
    texcoord_1.w = r0.x;
    texcoord_2.w = r0.y;
    texcoord_3.w = r0.z;
    color_0.xyz = input_5;

// approximately 27 instruction slots used
