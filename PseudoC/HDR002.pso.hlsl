//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/HDR002.pso /Fcshaderdump19/HDR002.pso.dis
//
//
// Parameters:
//
//   float4 BlurOffsets[16];
//   float2 BlurScale;
//   sampler2D Src0;
//
//	SetPixelShaderConstantF[0+]				[BlurShaderHDR]
//		|0.000000|0.000000|0.000000|0.000000|           fTargetLUM=1.2000
//	SetPixelShaderConstantF[1+]                             fUpperLUMClamp=1.4000
//		|1.225000|1.350000|0.500000|1.400000|           fGrassDimmer=1.3000
//	SetPixelShaderConstantF[2+]                             fTreeDimmer=1.2000
//		|0.003906|0.000000|0.000000|0.000000|           fEmissiveHDRMult=2.0000
//	SetPixelShaderConstantF[3+]                             fEyeAdaptSpeed=0.7000
//		|-7.000000|-7.000000|0.000000|0.000000|         fSunlightDimmer=1.3000
//		|-6.000000|-6.000000|0.000000|0.000000|         fSIEmmisiveMult=1.0000
//		|-5.000000|-5.000000|0.000000|0.000000|         fSISpecularMult=1.5000
//		|-4.000000|-4.000000|0.000000|0.000000|         fSkyBrightness=0.5000
//		|-3.000000|-3.000000|0.000000|0.000000|         fSunBrightness=0.0000
//		|-2.000000|-2.000000|0.000000|0.000000|         fBrightScale=1.5000
//		|-1.000000|-1.000000|0.106507|0.000000|         fBrightClamp=1.3500
//		|0.000000|0.000000|0.786986|0.000000|           fBlurRadius=1.0000
//		|1.000000|1.000000|0.106507|0.000000|           iNumBlurpasses=1
//		|2.000000|2.000000|0.000000|0.000000|           iBlendType=2
//		|3.000000|3.000000|0.000000|0.000000|           bDoHighDynamicRange=1
//		|4.000000|4.000000|0.000000|0.000000|
//		|5.000000|5.000000|0.000000|0.000000|
//		|6.000000|6.000000|0.000000|0.000000|
//		|7.000000|7.000000|0.000000|0.000000|
//		|0.000000|0.000000|0.000000|0.000000|
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   BlurScale    const_2       1		1/256 => 0.003906
//   BlurOffsets  const_3      15
//                const_4      .
//                const_5      .
//                const_6      .
//                const_7      .
//                const_8      .
//                const_9      .
//                const_10     .
//                const_11     .
//                const_12     .
//                const_13     .
//                const_14     .
//                const_15     .
//                const_16     .
//                const_17     .
//   Src0         texture_0       1
//

    const int4 const_0 = {1, 0, 0, 0};
    float2 texcoord_0 : TEXCOORD0;
    sampler2D Src0;
    r0.xy = BlurScale.xy;
    r14.xy = (r0 * const_4) + IN.texcoord_0;
    r13.xy = (r0 * BlurOffsets) + IN.texcoord_0;
    r12.xy = (r0 * const_5) + IN.texcoord_0;
    r11.xy = (r0 * const_6) + IN.texcoord_0;
    r10.xy = (r0 * const_7) + IN.texcoord_0;
    r9.xy = (r0 * const_8) + IN.texcoord_0;
    r8.xy = (r0 * const_9) + IN.texcoord_0;
    r7.xy = (r0 * const_10) + IN.texcoord_0;
    r6.xy = (r0 * const_11) + IN.texcoord_0;
    r5.xy = (r0 * const_12) + IN.texcoord_0;
    r4.xy = (r0 * const_13) + IN.texcoord_0;
    r3.xy = (r0 * const_14) + IN.texcoord_0;
    r2.xy = (r0 * const_15) + IN.texcoord_0;
    r1.xy = (r0 * const_16) + IN.texcoord_0;
    r0.xy = (r0 * const_17) + IN.texcoord_0;
    r14.xyzw = tex2D(Src0, r14);
    r13.xyzw = tex2D(Src0, r13);
    r12.xyzw = tex2D(Src0, r12);
    r11.xyzw = tex2D(Src0, r11);
    r10.xyzw = tex2D(Src0, r10);
    r9.xyzw = tex2D(Src0, r9);
    r8.xyzw = tex2D(Src0, r8);
    r7.xyzw = tex2D(Src0, r7);
    r6.xyzw = tex2D(Src0, r6);
    r5.xyzw = tex2D(Src0, r5);
    r4.xyzw = tex2D(Src0, r4);
    r3.xyzw = tex2D(Src0, r3);
    r2.xyzw = tex2D(Src0, r2);
    r1.xyzw = tex2D(Src0, r1);
    r0.xyzw = tex2D(Src0, r0);
    r14.xyz = r14.xyz * const_4.z;
    r13.xyz = (BlurOffsets.z * r13.xyz) + r14.xyz;
    r12.xyz = (const_5.z * r12.xyz) + r13.xyz;
    r11.xyz = (const_6.z * r11.xyz) + r12.xyz;
    r10.xyz = (const_7.z * r10.xyz) + r11.xyz;
    r9.xyz = (const_8.z * r9.xyz) + r10.xyz;
    r8.xyz = (const_9.z * r8.xyz) + r9.xyz;
    r7.xyz = (const_10.z * r7.xyz) + r8.xyz;
    r6.xyz = (const_11.z * r6.xyz) + r7.xyz;
    r5.xyz = (const_12.z * r5.xyz) + r6.xyz;
    r4.xyz = (const_13.z * r4.xyz) + r5.xyz;
    r3.xyz = (const_14.z * r3.xyz) + r4.xyz;
    r2.xyz = (const_15.z * r2.xyz) + r3.xyz;
    r1.xyz = (const_16.z * r1.xyz) + r2.xyz;
    r0.xyz = (const_17.z * r0.xyz) + r1.xyz;
    r0.w = 1;
    OUT.color_0.rgba = r0.xyzw;

// approximately 48 instruction slots used (15 texture, 33 arithmetic)
