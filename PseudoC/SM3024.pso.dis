//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3024.pso /Fcshaderdump19/SM3024.pso.dis
//
//
// Parameters:
//
//   sampler2D DecalMap;
//   float4 PSDecalOffsets[8];
//   float4 PSNumDecals;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   PSNumDecals    c6       1
//   PSDecalOffsets c9       8
//   DecalMap       s1       1
//

    ps_3_0
    def c0, 8, 0, 1, 2
    def c1, 7, 0, 0, 0
    def c2, 3, 4, 5, 6
    dcl_texcoord v0.xyz
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_texcoord7 v7.xyz
    dcl_2d s1
    mov_pp r1.w, c0.x
    min_pp r0.x, c6.x, r1.w
    cmp_pp r0.w, r0.x, c0.y, c0.z
    frc_pp r0.y, r0.x
    cmp_pp r0.z, -r0.y, c0.y, c0.z
    add_pp r0.y, r0.x, -r0.y
    mad r2.w, r0.w, r0.z, r0.y
    mov_sat_pp r0.xy, v0
    cmp_pp r1.w, -r2.w, c0.y, c0.z
    mad_pp r0.xy, c9.ywzw, r0, c9.xzzw
    texld_pp r0, r0, s1
    if_ne r1.w, -r1.w
      mul_pp r1.w, r0.w, v0.z
      mul_pp r1.xyz, r0, r1.w
    else
      mov r0.w, c0.y
      mov_pp r1.xyz, r0.w
      mov_pp r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v1
    mad_pp r0.xy, c10.ywzw, r0, c10.xzzw
    texld_pp r0, r0, s1
    if_lt c0.z, r2.w
      mul_pp r0.w, r0.w, v1.z
      add_pp r0.xyz, -r1, r0
      mad_pp r1.xyz, r0.w, r0, r1
      add_pp r1.w, r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v2
    mad_pp r0.xy, c11.ywzw, r0, c11.xzzw
    texld_pp r0, r0, s1
    if_lt c0.w, r2.w
      mul_pp r0.w, r0.w, v2.z
      add_pp r0.xyz, -r1, r0
      mad_pp r1.xyz, r0.w, r0, r1
      add_pp r1.w, r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v3
    mad_pp r0.xy, c12.ywzw, r0, c12.xzzw
    texld_pp r0, r0, s1
    if_lt c2.x, r2.w
      mul_pp r0.w, r0.w, v3.z
      add_pp r0.xyz, -r1, r0
      mad_pp r1.xyz, r0.w, r0, r1
      add_pp r1.w, r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v4
    mad_pp r0.xy, c13.ywzw, r0, c13.xzzw
    texld_pp r0, r0, s1
    if_lt c2.y, r2.w
      mul_pp r0.w, r0.w, v4.z
      add_pp r0.xyz, -r1, r0
      mad_pp r1.xyz, r0.w, r0, r1
      add_pp r1.w, r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v5
    mad_pp r0.xy, c14.ywzw, r0, c14.xzzw
    texld_pp r0, r0, s1
    if_lt c2.z, r2.w
      mul_pp r0.w, r0.w, v5.z
      add_pp r0.xyz, -r1, r0
      mad_pp r1.xyz, r0.w, r0, r1
      add_pp r1.w, r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v6
    mad_pp r0.xy, c15.ywzw, r0, c15.xzzw
    texld_pp r0, r0, s1
    if_lt c2.w, r2.w
      mul_pp r0.w, r0.w, v6.z
      add_pp r0.xyz, -r1, r0
      mad_pp r1.xyz, r0.w, r0, r1
      add_pp r1.w, r1.w, r0.w
    endif
    mov_sat_pp r0.xy, v7
    mad_pp r0.xy, c16.ywzw, r0, c16.xzzw
    texld_pp r0, r0, s1
    if_lt c1.x, r2.w
      mul_pp r0.w, r0.w, v7.z
      add_pp r0.xyz, -r1, r0
      mad_pp oC0.xyz, r0.w, r0, r1
      add_pp r0.w, r1.w, r0.w
      mov_sat_pp oC0.w, r0.w
    else
      mov_pp oC0.xyz, r1
      mov_pp r0.w, r1.w
      mov_sat_pp oC0.w, r0.w
    endif

// approximately 87 instruction slots used (8 texture, 79 arithmetic)
