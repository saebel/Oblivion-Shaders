//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3004.vso /Fcshaderdump19/SM3004.vso.dis
//
//
// Parameters:
//
//   float4 FogColor;
//   float4 FogParam;
//   row_major float4x4 ModelViewProj;
//   row_major float4x4 ShadowProj;
//   float4 ShadowProjData;
//   float4 ShadowProjTransform;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   ModelViewProj[0]    ModelViewProj[0]       1
//   ModelViewProj[1]    ModelViewProj[1]       1
//   ModelViewProj[2]    ModelViewProj[2]       1
//   ModelViewProj[3]    ModelViewProj[3]       1
//   FogParam            FogParam      1
//   FogColor            FogColor      1
//   ShadowProj[0]          ShadowProj[0]      1
//   ShadowProj[1]          ShadowProj[1]      1
//   ShadowProj[2]          ShadowProj[2]      1
//   ShadowProj[3]          ShadowProj[3]      1
//   ShadowProjData      ShadowProjData      1
//   ShadowProjTransform ShadowProjTransform      1
//

    const_4 = {1, 0, 0, 0};
    position input_0;
    tangent input_1;
    binormal input_2;
    normal input_3;
    texcoord input_4;
    position output_0;
    texcoord output_1.xy;
    dcl_color output_2
    texcoord_3 output_3.xyz;
    texcoord_4 output_4.xyz;
    texcoord_5 output_5.xyz;
    texcoord_6 output_6.xyz;
    texcoord_1 output_7;
    texcoord_7 output_8;
    r0.x = (ModelViewProj[0].x * input_0.x) + (ModelViewProj[0].y * input_0.y) + (ModelViewProj[0].z * input_0.z) + (ModelViewProj[0].w * input_0.w);
    r0.y = (ModelViewProj[1].x * input_0.x) + (ModelViewProj[1].y * input_0.y) + (ModelViewProj[1].z * input_0.z) + (ModelViewProj[1].w * input_0.w);
    r0.z = (ModelViewProj[2].x * input_0.x) + (ModelViewProj[2].y * input_0.y) + (ModelViewProj[2].z * input_0.z) + (ModelViewProj[2].w * input_0.w);
    r0.w = (r0.x * r0.x) + (r0.y * r0.y) + (r0.z * r0.z);
    r0.w = 1.0 / sqrt(r0.w);
    output_0.w = (ModelViewProj[3].x * input_0.x) + (ModelViewProj[3].y * input_0.y) + (ModelViewProj[3].z * input_0.z) + (ModelViewProj[3].w * input_0.w);
    r0.w = 1.0 / r0.w;
    r0.w = FogParam.x - r0.w;
    r1.w = 1.0 / FogParam.y;
    output_0.xyz = r0;
    r0.w = sat(r0.w * r1.w);
    r0.z = const_4.x - r0.w;
    r0.w = (ShadowProj[3].x * input_0.x) + (ShadowProj[3].y * input_0.y) + (ShadowProj[3].z * input_0.z) + (ShadowProj[3].w * input_0.w);
    output_8.w = r0.z * FogParam.z;
    r0.xyz = r0.w * ShadowProjTransform.xyww;
    r2.x = (ShadowProj[0].x * input_0.x) + (ShadowProj[0].y * input_0.y) + (ShadowProj[0].z * input_0.z) + (ShadowProj[0].w * input_0.w);
    r2.y = (ShadowProj[1].x * input_0.x) + (ShadowProj[1].y * input_0.y) + (ShadowProj[1].z * input_0.z) + (ShadowProj[1].w * input_0.w);
    r0.z = 1.0 / r0.z;
    r1.xy = r0 - r2;
    r0.xy = r2 - ShadowProjData;
    r0.w = 1.0 / ShadowProjData.w;
    output_7.xy = r0.z * r1;
    output_7.z = r0.x * r0.w;
    output_7.w = (r0.y * -r0.w) - const_4.x;
    output_1.xy = input_4;
    output_2 = const_4.x;
    output_3.xyz = input_1;
    output_4.xyz = input_2;
    output_5.xyz = input_3;
    output_6.xyz = input_0;
    output_8.xyz = FogColor;

// approximately 31 instruction slots used
