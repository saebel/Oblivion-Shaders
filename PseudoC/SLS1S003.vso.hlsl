//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS1S003.vso /Fcshaderdump19/SLS1S003.vso.dis
//
//
// Parameters:
//
//   float4 Bones[54];
//   float4 LightPosition[3];
//   row_major float4x4 SkinModelViewProj;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   SkinModelViewProj[0] const_1        1
//   SkinModelViewProj[1] const_2        1
//   SkinModelViewProj[2] const_3        1
//   SkinModelViewProj[3] const_4        1
//   LightPosition[0]     const_16       1
//   Bones[0]             const_42      18
//   Bones[1]             const_43      18
//   Bones[2]             const_44      18
//

    const float4 const_0 = {1, 765.01001, 0, 0.5};
    float4 IN.position : POSITION;
    float3 IN.normal : NORMAL;
    float4 IN.texcoord_0 : TEXCOORD0;
    float3 IN.tangent : TANGENT;
    float3 IN.binormal : BINORMAL;
    float3 IN.blendweight : BLENDWEIGHT;
    float4 IN.blendindices : BLENDINDICES;
    r2.x = dot(IN.blendweight.xyz, 1.xyz);
    r0.xyzw = (IN.position.xyzx * const_0.xxxz) + const_0.zzzx;
    r1.xyzw = IN.blendindices.zyxw * 765.01001;
    r2.w = 1 - r2.x;
    offset.x = r1.y;
    r2.x = dot(Bones[0 + offset.x].xyzw, r0.xyzw);
    r2.y = dot(Bones[1 + offset.x].xyzw, r0.xyzw);
    r2.z = dot(Bones[2 + offset.x].xyzw, r0.xyzw);
    r3.xyz = r2.xyz * IN.blendweight.y;
    offset.x = r1.x;
    r2.x = dot(Bones[0 + offset.x].xyzw, r0.xyzw);
    r2.y = dot(Bones[1 + offset.x].xyzw, r0.xyzw);
    r2.z = dot(Bones[2 + offset.x].xyzw, r0.xyzw);
    r3.xyz = (IN.blendweight.x * r2.xyz) + r3.xyz;
    offset.x = r1.z;
    r2.x = dot(Bones[0 + offset.x].xyzw, r0.xyzw);
    r2.y = dot(Bones[1 + offset.x].xyzw, r0.xyzw);
    r2.z = dot(Bones[2 + offset.x].xyzw, r0.xyzw);
    r3.xyz = (IN.blendweight.z * r2.xyz) + r3.xyz;
    offset.x = r1.w;
    r2.x = dot(Bones[0 + offset.x].xyzw, r0.xyzw);
    r2.y = dot(Bones[1 + offset.x].xyzw, r0.xyzw);
    r2.z = dot(Bones[2 + offset.x].xyzw, r0.xyzw);
    r0.w = 1;
    r0.xyz = (r2.w * r2.xyz) + r3.xyz;
    OUT.position.x = dot(SkinModelViewProj[0].xyzw, r0.xyzw);
    OUT.position.y = dot(SkinModelViewProj[1].xyzw, r0.xyzw);
    offset.x = r1.y;
    r2.x = dot(Bones[0 + offset.x].xyz, IN.tangent.xyz);
    r2.y = dot(Bones[1 + offset.x].xyz, IN.tangent.xyz);
    r2.z = dot(Bones[2 + offset.x].xyz, IN.tangent.xyz);
    r3.xyz = r2.xyz * IN.blendweight.y;
    offset.x = r1.x;
    r2.x = dot(Bones[0 + offset.x].xyz, IN.tangent.xyz);
    r2.y = dot(Bones[1 + offset.x].xyz, IN.tangent.xyz);
    r2.z = dot(Bones[2 + offset.x].xyz, IN.tangent.xyz);
    r3.xyz = (IN.blendweight.x * r2.xyz) + r3.xyz;
    offset.x = r1.z;
    r2.x = dot(Bones[0 + offset.x].xyz, IN.tangent.xyz);
    r2.y = dot(Bones[1 + offset.x].xyz, IN.tangent.xyz);
    r2.z = dot(Bones[2 + offset.x].xyz, IN.tangent.xyz);
    r3.xyz = (IN.blendweight.z * r2.xyz) + r3.xyz;
    offset.x = r1.w;
    r2.x = dot(Bones[0 + offset.x].xyz, IN.tangent.xyz);
    r2.y = dot(Bones[1 + offset.x].xyz, IN.tangent.xyz);
    r2.z = dot(Bones[2 + offset.x].xyz, IN.tangent.xyz);
    OUT.position.z = dot(SkinModelViewProj[2].xyzw, r0.xyzw);
    r3.xyz = (r2.w * r2.xyz) + r3.xyz;
    r2.xyz = LightPosition[0].xyz - r0.xyz;
    r4.x = dot(r3.xyz, r3.xyz);	// normalize + length
    r3.w = 1.0 / sqrt(r4.x);
    r4.x = dot(r2.xyz, r2.xyz);	// normalize + length
    r3.xyz = r3.xyz * r3.w;
    r3.w = 1.0 / sqrt(r4.x);
    r4.xyz = r2.xyz * r3.w;
    offset.x = r1.y;
    r5.x = dot(Bones[0 + offset.x].xyz, IN.binormal.xyz);
    r5.y = dot(Bones[1 + offset.x].xyz, IN.binormal.xyz);
    r5.z = dot(Bones[2 + offset.x].xyz, IN.binormal.xyz);
    r6.xyz = r5.xyz * IN.blendweight.y;
    offset.x = r1.x;
    r5.x = dot(Bones[0 + offset.x].xyz, IN.binormal.xyz);
    r5.y = dot(Bones[1 + offset.x].xyz, IN.binormal.xyz);
    r5.z = dot(Bones[2 + offset.x].xyz, IN.binormal.xyz);
    r6.xyz = (IN.blendweight.x * r5.xyz) + r6.xyz;
    offset.x = r1.z;
    r5.x = dot(Bones[0 + offset.x].xyz, IN.binormal.xyz);
    r5.y = dot(Bones[1 + offset.x].xyz, IN.binormal.xyz);
    r5.z = dot(Bones[2 + offset.x].xyz, IN.binormal.xyz);
    r3.x = dot(r3.xyz, r4.xyz);
    r7.xyz = (IN.blendweight.z * r5.xyz) + r6.xyz;
    offset.x = r1.w;
    r5.x = dot(Bones[0 + offset.x].xyz, IN.binormal.xyz);
    r5.y = dot(Bones[1 + offset.x].xyz, IN.binormal.xyz);
    r5.z = dot(Bones[2 + offset.x].xyz, IN.binormal.xyz);
    offset.x = r1.y;
    r6.x = dot(Bones[0 + offset.x].xyz, IN.normal.xyz);
    r6.y = dot(Bones[1 + offset.x].xyz, IN.normal.xyz);
    r6.z = dot(Bones[2 + offset.x].xyz, IN.normal.xyz);
    r8.xyz = r6.xyz * IN.blendweight.y;
    offset.x = r1.x;
    r6.x = dot(Bones[0 + offset.x].xyz, IN.normal.xyz);
    r6.y = dot(Bones[1 + offset.x].xyz, IN.normal.xyz);
    r6.z = dot(Bones[2 + offset.x].xyz, IN.normal.xyz);
    r6.xyz = (IN.blendweight.x * r6.xyz) + r8.xyz;
    offset.x = r1.z;
    r1.x = dot(Bones[0 + offset.x].xyz, IN.normal.xyz);
    r1.y = dot(Bones[1 + offset.x].xyz, IN.normal.xyz);
    r1.z = dot(Bones[2 + offset.x].xyz, IN.normal.xyz);
    r6.xyz = (IN.blendweight.z * r1.xyz) + r6.xyz;
    offset.x = r1.w;
    r1.x = dot(Bones[0 + offset.x].xyz, IN.normal.xyz);
    r1.y = dot(Bones[1 + offset.x].xyz, IN.normal.xyz);
    r1.z = dot(Bones[2 + offset.x].xyz, IN.normal.xyz);
    r5.xyz = (r2.w * r5.xyz) + r7.xyz;
    r1.xyz = (r2.w * r1.xyz) + r6.xyz;
    r7.x = dot(r5.xyz, r5.xyz);	// normalize + length
    r6.x = dot(r1.xyz, r1.xyz);	// normalize + length
    r2.w = 1.0 / sqrt(r7.x);
    r1.w = 1.0 / sqrt(r6.x);
    r5.xyz = r5.xyz * r2.w;
    r1.xyz = r1.xyz * r1.w;
    r3.y = dot(r5.xyz, r4.xyz);
    r3.z = dot(r1.xyz, r4.xyz);
    OUT.position.w = dot(SkinModelViewProj[3].xyzw, r0.xyzw);
    r0.x = dot(r3.xyz, r3.xyz);	// normalize + length
    r1.w = 1.0 / sqrt(r0.x);
    r0.w = 1.0 / LightPosition[0].w;
    OUT.texcoord_3.xyz = r3.xyz * r1.w;
    r0.xyz = r2.xyz * r0.w;
    OUT.texcoord_1.xy = (0.5 * r0) + 0.5;
    OUT.texcoord_2.x = (r0.z * 0.5) + 0.5;
    OUT.texcoord_0.xy = IN.texcoord_0;
    OUT.texcoord_2.y = 0.5;

// approximately 114 instruction slots used
