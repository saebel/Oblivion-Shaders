//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/SLS1032.pso /Fcshaderdump19/SLS1032.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   samplerCUBE EnvironmentCubeMap;
//   sampler2D NormalMap;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   AmbientColor       AmbientColor       1
//   NormalMap          NormalMap       1
//   EnvironmentCubeMap EnvironmentCubeMap       1
//

    const_0 = {2, -1, 1, 0};
    texcoord input_0.xy;
    texcoord input_1;
    texcoord input_2;
    texcoord input_3;
    sampler NormalMap;
    dcl_cube EnvironmentCubeMap
    r1 = NormalMap[texcoord_0];
    r2.x = texcoord_1.w;
    r2.y = texcoord_2.w;
    r2.z = texcoord_3.w;
    r1.xyz = (const_0.x * r1) - const_0.y;
    r0.x = (r1.x * texcoord_1.x) + (r1.y * texcoord_1.y) + (r1.z * texcoord_1.z);
    r0.y = (r1.x * texcoord_2.x) + (r1.y * texcoord_2.y) + (r1.z * texcoord_2.z);
    r0.z = (r1.x * texcoord_3.x) + (r1.y * texcoord_3.y) + (r1.z * texcoord_3.z);
    r3.x = (r0.x * r2.x) + (r0.y * r2.y) + (r0.z * r2.z);
    r1.x = (r0.x * r0.x) + (r0.y * r0.y) + (r0.z * r0.z);
    r0.w = r3.x - r3.x;
    r1.xyz = r2 * r1.x;
    r0.xyz = (r0.w * r0) - r1;
    r0 = EnvironmentCubeMap[r0];
    r0.xyz = r1.w * r0;
    r0.xyz = r0 * AmbientColor.w;
    r0.w = const_0.z;
    rendertarget_0 = r0;

// approximately 18 instruction slots used (2 texture, 16 arithmetic)
