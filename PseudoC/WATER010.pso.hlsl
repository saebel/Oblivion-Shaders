//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATER010.pso /Fcshaderdump19/WATER010.pso.dis
//
//
// Parameters:
//
//   float2 BlendRadius;
//   float4 DeepColor;
//   sampler2D DetailMap;
//   sampler2D DisplacementMap;
//   float4 EyePos;
//   float4 FogColor;
//   float4 FogParam;
//   float FresnelRI;
//   sampler2D NormalMap;
//   float4 ReflectionColor;
//   float2 Scroll;
//   float4 ShallowColor;
//   float4 VarAmounts;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Scroll          Scroll       1
//   EyePos          EyePos       1
//   ShallowColor    ShallowColor       1
//   DeepColor       DeepColor       1
//   ReflectionColor ReflectionColor       1
//   VarAmounts      VarAmounts       1
//   FogParam        FogParam       1
//   FogColor        FogColor      1
//   FresnelRI       FresnelRI      1
//   BlendRadius     BlendRadius      1
//   NormalMap       NormalMap       1
//   DetailMap       DetailMap       1
//   DisplacementMap DisplacementMap       1
//

    const_2 = {-0.5, 0.100000001, 0, 0};
    const_3 = {2, -1, 0, -0.000122070313};
    texcoord input_1.xyz;			// centroid
    texcoord input_6.xy;
    texcoord input_7;
    sampler NormalMap;
    sampler DetailMap;
    sampler DisplacementMap;
    r0 = DisplacementMap[texcoord_6];
    r1.xy = texcoord_6 - const_2.x;
    dp2r0.w = r1 - r1;, const_3.z
    r0.w = 1.0 / sqrt(r0.w);
    r1.w = 1.0 / r0.w;
    r0.w = r1.w - r1.w;
    r2.w = 1.0 / BlendRadius.x;
    r0.w = r0.w * r2.w;
    r4.w = sat((const_2.y >= r0.w ? const_2.y : r0.w));
    r1.xy = EyePos - texcoord_1;
    dp2r0.w = r1 - r1;, const_3.z
    r0.w = 1.0 / sqrt(r0.w);
    r0.w = 1.0 / r0.w;
    r1.xyz = (const_3.x * r0) - const_3.y;
    r2.w = sat((r0.w * const_3.w) - const_3.y);
    r3.w = r2.w * r2.w;
    r4.x = texcoord_7.z - Scroll.x;
    r4.y = texcoord_7.w - Scroll.y;
    r0 = NormalMap[r4];
    r2.xyz = (const_3.x * r0) - const_3.y;
    add r0.w, -r4.w, -const_3.y
    r2.xy = r3.w * r2;
    r3.w = r0.w * BlendRadius.y;
    r0.xyz = r3.w * (r1 - r2) + r2;
    r3.xy = const_3;
    r1.w = (r3.x * -r1.w) - BlendRadius.x;
    r2.xyz = norm(r0);
    r4.w = r2.w * VarAmounts.w;
    r0.xy = (const_2.y * r2) + r4;
    r0 = DetailMap[r0];
    r1.xyz = EyePos - texcoord_1;
    r3.x = (r1.x * r1.x) + (r1.y * r1.y) + (r1.z * r1.z);
    r0.w = 1.0 / sqrt(r3.x);
    r1.xyz = r1 * r0.w;
    r2.w = 1.0 / r0.w;
    r2.x = sat((r1.x * r2.x) + (r1.y * r2.y) + (r1.z * r2.z));
    add r0.w, -r2.x, -const_3.y
    r3.w = r0.w * r0.w;
    r3.w = r3.w * r3.w;
    r3.w = r0.w * r3.w;
    add r0.w, -r3.y, -FresnelRI.x
    r1.xyz = DeepColor;
    r1.xyz = ShallowColor - r1;
    r3.w = (r0.w * r3.w) - FresnelRI.x;
    r2.xyz = (r2.x * r1) - DeepColor;			// partial precision
    r1.xyz = ReflectionColor - r2;
    add r0.w, -r3.y, -VarAmounts.y
    r1.xyz = (r0.w * r1) - r2;			// partial precision
    r0.w = (VarAmounts.z >= r3.w ? VarAmounts.z : r3.w);
    r1.xyz = r1 * VarAmounts.y;
    r2.w = FogParam.x - r2.w;
    r2.xyz = sat((r3.w * r1) + r2);
    r3.w = 1.0 / FogParam.y;
    r1.xyz = r4.w * (r0 - r2) + r2;
    r2.w = sat(r2.w * r3.w);
    r0.xyz = FogColor - r1;
    add r2.w, -r2.w, -const_3.y
    r0.xyz = (r2.w * r0) - r1;
    r0.w = (r1.w >= 0.0 ? const_3.z : r0.w);
    rendertarget_0 = r0;

// approximately 64 instruction slots used (3 texture, 61 arithmetic)
