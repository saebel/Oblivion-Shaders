//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2075.vso /Fcshaderdump19/SLS2075.vso.dis
//
//
// Parameters:
//
//   float4 FogParam;
//   float4 LightPosition[3];
//   row_major float4x4 ModelViewProj;
//   row_major float4x4 ObjToCubeSpace;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   ModelViewProj[0]  const_0        1
//   ModelViewProj[1]  const_1        1
//   ModelViewProj[2]  const_2        1
//   ModelViewProj[3]  const_3        1
//   ObjToCubeSpace const_8       4
//   LightPosition[0]  const_16       1
//   FogParam       const_23      1
//

    const int4 const_4 = {0, 1, 0, 0};
    float4 IN.position : POSITION;
    float4 IN.texcoord_0 : TEXCOORD0;
    r0.x = dot(ModelViewProj[0], IN.position);
    r0.y = dot(ModelViewProj[1], IN.position);
    r0.z = dot(ModelViewProj[2], IN.position);
    r1.x = dot(r0, r0);	// normalize + length
    OUT.position.w = dot(ModelViewProj[3], IN.position);
    r0.w = 1.0 / sqrt(r1.x);
    OUT.texcoord_1.x = dot(ObjToCubeSpace, IN.position);
    r0.w = 1.0 / r0.w;
    r0.w = FogParam.x - r0.w;
    r1.w = 1.0 / FogParam.y;
    OUT.texcoord_1.y = dot(const_9, IN.position);
    r0.w = r0.w * r1.w;
    OUT.texcoord_1.z = dot(const_10, IN.position);
    r0.w = max(r0.w, const_4.x);
    OUT.texcoord_1.w = dot(const_11, IN.position);
    r0.w = min(r0.w, const_4.y);
    OUT.position.xyz = r0;
    OUT.texcoord_3.w = const_4.y - r0.w;
    OUT.texcoord_0.xy = IN.texcoord_0;
    OUT.texcoord_6.xyz = IN.position;
    OUT.texcoord_2 = LightPosition[0];
    OUT.texcoord_3.xyz = const_4.x;

// approximately 22 instruction slots used
