//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SM3017.vso /Fcshaderdump19/SM3017.vso.dis
//
//
// Parameters:
//
//   float4 DecalFade[8];
//   row_major float4x4 DecalProjection[8];
//   row_major float4x4 ModelViewProj;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   ModelViewProj[0]   const_0        1
//   ModelViewProj[1]   const_1        1
//   ModelViewProj[2]   const_2        1
//   ModelViewProj[3]   const_3        1
//   DecalFade       const_32      8
//   DecalProjection const_40     31
//

    const float4 const_4 = {0.0125000002, 0.5, 0, 1};
    const float4 const_5 = {10, (1.0 / 256), 1, 0};
    float4 IN.position : POSITION;
    float3 IN.normal : NORMAL;
    float4 OUT.position : POSITION;
    float3 OUT.texcoord_0 : TEXCOORD0;
    float3 OUT.texcoord_1 : TEXCOORD1;
    float3 OUT.texcoord_2 : TEXCOORD2;
    float3 OUT.texcoord_3 : TEXCOORD3;
    float3 OUT.texcoord_4 : TEXCOORD4;
    float3 OUT.texcoord_5 : TEXCOORD5;
    float3 OUT.texcoord_6 : TEXCOORD6;
    float3 OUT.texcoord_7 : TEXCOORD7;
    OUT.position.x = dot(ModelViewProj[0].xyzw, IN.position.xyzw);
    OUT.position.y = dot(ModelViewProj[1].xyzw, IN.position.xyzw);
    OUT.position.z = dot(ModelViewProj[2].xyzw, IN.position.xyzw);
    r0.x = const_40.w;
    r0.y = const_41.w;
    r0.z = const_42.w;
    OUT.position.w = dot(ModelViewProj[3].xyzw, IN.position.xyzw);
    r0.xyz = r0.xyz + IN.position;
    r1.x = dot(const_40.xyz, r0.xyz);
    r1.y = dot(const_41.xyz, r0.xyz);
    r0.z = dot(const_42.xyz, r0.xyz);
    r0.w = dot(IN.normal.xyz, const_42.xyz);
    OUT.texcoord_0.xy = (0.0125000002 * r1) + 0.5;
    r0.w = max(r0.w, 0);
    r1.w = (abs(r0.z) * -(1.0 / 256)) + 1;
    r1.z = 1 - r0.w;
    r0.w = pow(abs(r1.z), 10);
    r0.x = const_44.w;
    r0.y = const_45.w;
    r0.z = const_46.w;
    r0.w = r0.w * const_32.x;
    r0.xyz = r0.xyz + IN.position;
    OUT.texcoord_0.z = r1.w * r0.w;
    r1.x = dot(const_44.xyz, r0.xyz);
    r1.y = dot(const_45.xyz, r0.xyz);
    r1.w = dot(IN.normal.xyz, const_46.xyz);
    r0.w = dot(const_46.xyz, r0.xyz);
    r0.z = max(r1.w, 0);
    OUT.texcoord_1.xy = (0.0125000002 * r1) + 0.5;
    r1.z = 1 - r0.z;
    r1.w = (abs(r0.w) * -(1.0 / 256)) + 1;
    r0.w = pow(abs(r1.z), 10);
    r0.w = r0.w * const_33.x;
    r0.x = const_48.w;
    r0.y = const_49.w;
    r0.z = const_50.w;
    OUT.texcoord_1.z = r1.w * r0.w;
    r0.xyz = r0.xyz + IN.position;
    r1.x = dot(const_48.xyz, r0.xyz);
    r1.y = dot(const_49.xyz, r0.xyz);
    r0.z = dot(const_50.xyz, r0.xyz);
    r0.w = dot(IN.normal.xyz, const_50.xyz);
    OUT.texcoord_2.xy = (0.0125000002 * r1) + 0.5;
    r0.w = max(r0.w, 0);
    r1.w = (abs(r0.z) * -(1.0 / 256)) + 1;
    r1.z = 1 - r0.w;
    r0.w = pow(abs(r1.z), 10);
    r0.x = const_52.w;
    r0.y = const_53.w;
    r0.z = const_54.w;
    r0.w = r0.w * const_34.x;
    r0.xyz = r0.xyz + IN.position;
    OUT.texcoord_2.z = r1.w * r0.w;
    r1.x = dot(const_52.xyz, r0.xyz);
    r1.y = dot(const_53.xyz, r0.xyz);
    r1.w = dot(IN.normal.xyz, const_54.xyz);
    r0.w = dot(const_54.xyz, r0.xyz);
    r0.z = max(r1.w, 0);
    OUT.texcoord_3.xy = (0.0125000002 * r1) + 0.5;
    r1.z = 1 - r0.z;
    r1.w = (abs(r0.w) * -(1.0 / 256)) + 1;
    r0.w = pow(abs(r1.z), 10);
    r0.w = r0.w * const_35.x;
    r0.x = const_56.w;
    r0.y = const_57.w;
    r0.z = const_58.w;
    OUT.texcoord_3.z = r1.w * r0.w;
    r0.xyz = r0.xyz + IN.position;
    r1.x = dot(const_56.xyz, r0.xyz);
    r1.y = dot(const_57.xyz, r0.xyz);
    r0.z = dot(const_58.xyz, r0.xyz);
    r0.w = dot(IN.normal.xyz, const_58.xyz);
    OUT.texcoord_4.xy = (0.0125000002 * r1) + 0.5;
    r0.w = max(r0.w, 0);
    r1.w = (abs(r0.z) * -(1.0 / 256)) + 1;
    r1.z = 1 - r0.w;
    r0.w = pow(abs(r1.z), 10);
    r0.x = const_60.w;
    r0.y = const_61.w;
    r0.z = const_62.w;
    r0.w = r0.w * const_36.x;
    r0.xyz = r0.xyz + IN.position;
    OUT.texcoord_4.z = r1.w * r0.w;
    r1.x = dot(const_60.xyz, r0.xyz);
    r1.y = dot(const_61.xyz, r0.xyz);
    r1.w = dot(IN.normal.xyz, const_62.xyz);
    r0.w = dot(const_62.xyz, r0.xyz);
    r0.z = max(r1.w, 0);
    OUT.texcoord_5.xy = (0.0125000002 * r1) + 0.5;
    r1.z = 1 - r0.z;
    r1.w = (abs(r0.w) * -(1.0 / 256)) + 1;
    r0.w = pow(abs(r1.z), 10);
    r0.w = r0.w * const_37.x;
    r0.x = const_64.w;
    r0.y = const_65.w;
    r0.z = const_66.w;
    OUT.texcoord_5.z = r1.w * r0.w;
    r0.xyz = r0.xyz + IN.position;
    r1.x = dot(const_64.xyz, r0.xyz);
    r0.w = dot(IN.normal.xyz, const_66.xyz);
    r1.y = dot(const_65.xyz, r0.xyz);
    r0.w = max(r0.w, 0);
    r0.z = dot(const_66.xyz, r0.xyz);
    r1.w = 1 - r0.w;
    OUT.texcoord_6.xy = (0.0125000002 * r1) + 0.5;
    r0.w = pow(abs(r1.w), 10);
    r0.z = (abs(r0.z) * -(1.0 / 256)) + 1;
    r0.w = r0.w * const_38.x;
    OUT.texcoord_6.z = r0.z * r0.w;
    r0.x = const_68.w;
    r0.y = const_69.w;
    r0.z = const_70.w;
    r0.xyz = r0.xyz + IN.position;
    r0.w = dot(IN.normal.xyz, const_70.xyz);
    r1.x = dot(const_68.xyz, r0.xyz);
    r0.w = max(r0.w, 0);
    r1.y = dot(const_69.xyz, r0.xyz);
    r1.w = 1 - r0.w;
    r0.z = dot(const_70.xyz, r0.xyz);
    r0.w = pow(abs(r1.w), 10);
    r0.z = (abs(r0.z) * -(1.0 / 256)) + 1;
    r0.w = r0.w * const_39.x;
    OUT.texcoord_7.xy = (0.0125000002 * r1) + 0.5;
    OUT.texcoord_7.z = r0.z * r0.w;

// approximately 140 instruction slots used
