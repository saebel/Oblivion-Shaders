//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2020.pso /Fcshaderdump19/SLS2020.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   sampler2D BaseMap;
//   float4 EmittanceColor;
//   sampler2D GlowMap;
//   sampler2D NormalMap;
//   float4 PSLightColor[4];
//   sampler2D ShadowMap;
//   sampler2D ShadowMaskMap;
//   float4 Toggles;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   AmbientColor   AmbientColor       1
//   PSLightColor   PSLightColor       1
//   EmittanceColor EmittanceColor       1
//   Toggles        Toggles       1
//   BaseMap        BaseMap       1
//   NormalMap      NormalMap       1
//   GlowMap        GlowMap       1
//   ShadowMap      ShadowMap       1
//   ShadowMaskMap  ShadowMaskMap       1
//

    const_0 = {-0.5, 0.5, -1, 1};
    const_3 = {0.699999988, 30, 0.200000003, 0};
    const_4 = {0, 0, 1, 0.5};
    texcoord input_0.xy;			// partial precision
    texcoord input_1.xyz;			// partial precision			// centroid
    texcoord input_3.xyz;			// partial precision			// centroid
    texcoord input_7;			// partial precision
    color input_0.xy;
    color input_1;
    sampler BaseMap;
    sampler NormalMap;
    sampler GlowMap;
    sampler ShadowMap;
    sampler ShadowMaskMap;
    r0 = NormalMap[texcoord_0];			// partial precision
    r0.xyz = r0 - const_0.x;
    r1.xyz = r0 - r0;			// partial precision
    r0.xyz = norm(r1);			// partial precision
    r2.xy = r0 * const_0.y;			// partial precision
    r2.w = (r0.z * const_0.y) - const_0.w;			// partial precision
    r1.xyz = (const_4.w * r0) + const_4;			// partial precision
    r1.w = r2.x * r1.x;
    r1.w = (r2.y * r1.y) - r1.w;
    r1.w = (r2.w * r1.z) - r1.w;			// partial precision
    r1.w = 1.0 / sqrt(r1.w);			// partial precision
    r1.xyz = r1 * r1.w;			// partial precision
    r2.xyz = norm(texcoord_3);			// partial precision
    r2.x = (r1.x * r2.x) + (r1.y * r2.y) + (r1.z * r2.z);			// partial precision
    r0.w = r0.w * const_3.x;			// partial precision
    r1.x = (r1.x * texcoord_1.x) + (r1.y * texcoord_1.y) + (r1.z * texcoord_1.z);			// partial precision
    r1.w = r1.x - r2.x;			// partial precision
    sat abs r1.w, r1.w			// partial precision
    r2.w = const_0.w - r1.w;			// partial precision
    pow r1.w, r2.w, const_3.y			// partial precision
    r6.x = (r0.x * texcoord_1.x) + (r0.y * texcoord_1.y) + (r0.z * texcoord_1.z);			// partial precision
    r2.w = r0.w * r1.w;			// partial precision
    r1.w = r6.x - const_0.y;			// partial precision
    r0.w = (r1.w >= const_4.x ? r1.w : const_4.x);			// partial precision
    r1.w = r2.w * r0.w;			// partial precision
    r0.w = const_3.z - r6.x;			// partial precision
    r0.w = (r0.w >= 0.0 ? r2.w : r1.w);			// partial precision
    r4.xyz = sat(r0.w * PSLightColor);			// partial precision
    r0.x = texcoord_7.z;			// partial precision
    r0.y = texcoord_7.w;			// partial precision
    r2 = ShadowMaskMap[r0];			// partial precision
    r3 = ShadowMap[texcoord_7];			// partial precision
    r1 = GlowMap[texcoord_0];			// partial precision
    r0 = BaseMap[texcoord_0];			// partial precision
    r3.xyz = r3 - const_0.z;			// partial precision
    r3.xyz = (r2.x * r3) - const_0.w;			// partial precision
    r2.xyz = r4 * r3;			// partial precision
    r2.w = const_0.x;
    r4.xyz = r2.w - EmittanceColor;
    r4.xyz = (input_0.y * r4) - const_0.y;
    r5.xyz = r4 - r4;			// partial precision
    r4.xyz = r1.w * (r1 - r0) + r0;			// partial precision
    r1.w = sat(r6.x);			// partial precision
    r1.xyz = r5 * r4;			// partial precision
    r0.xyz = r1.w * PSLightColor;			// partial precision
    r3.xyz = (r3 * r0) + AmbientColor;			// partial precision
    r0.xyz = (r3 >= const_4.x ? r3 : const_4.x);			// partial precision
    r0.xyz = (r1 * r0) + r2;			// partial precision
    r1.xyz = input_1.w * (input_1 - r0) + r0;			// partial precision
    r0.w = r0.w * AmbientColor.w;			// partial precision
    r0.xyz = (Toggles.y <= 0.0 ? r1 : r0);			// partial precision
    rendertarget_0 = r0;			// partial precision

// approximately 60 instruction slots used (5 texture, 55 arithmetic)
