//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS2074.vso /Fcshaderdump19/SLS2074.vso.dis
//
//
// Parameters:
//
//   float4 Bones[54];
//   float4 FogParam;
//   float4 LightPosition[3];
//   row_major float4x4 ObjToCubeSpace;
//   row_major float4x4 SkinModelViewProj;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   SkinModelViewProj[0] const_1        1
//   SkinModelViewProj[1] const_2        1
//   SkinModelViewProj[2] const_3        1
//   SkinModelViewProj[3] const_4        1
//   ObjToCubeSpace    const_8       4
//   LightPosition[0]     const_16       1
//   FogParam          const_23      1
//   Bones[0]             const_42      18
//   Bones[1]             const_43      18
//   Bones[2]             const_44      18
//

    const float4 const_0 = {1, 765.01001, 0, 0};
    float4 IN.position : POSITION;
    float4 IN.texcoord_0 : TEXCOORD0;
    float3 IN.blendweight : BLENDWEIGHT;
    float4 IN.blendindices : BLENDINDICES;
    r0 = IN.blendindices.zyxw * const_0.y;
    r0 = r0 - floor(r0);
    r1.x = dot(IN.blendweight, const_0.x);
    r0 = (IN.blendindices.zyxw * const_0.y) - r0;
    offset = r0;
    r0 = (IN.position.xyzx * const_0.xxxz) + const_0.zzzx;
    r1.w = const_0.x - r1.x;
    r1.x = dot(Bones[0 + offset.y], r0);
    r1.y = dot(Bones[1 + offset.y], r0);
    r1.z = dot(Bones[2 + offset.y], r0);
    r2.xyz = r1 * IN.blendweight.y;
    r1.x = dot(Bones[0 + offset.x], r0);
    r1.y = dot(Bones[1 + offset.x], r0);
    r1.z = dot(Bones[2 + offset.x], r0);
    r2.xyz = (IN.blendweight.x * r1) + r2;
    r1.x = dot(Bones[0 + offset.z], r0);
    r1.y = dot(Bones[1 + offset.z], r0);
    r1.z = dot(Bones[2 + offset.z], r0);
    r2.xyz = (IN.blendweight.z * r1) + r2;
    r1.x = dot(Bones[0 + offset.w], r0);
    r1.y = dot(Bones[1 + offset.w], r0);
    r1.z = dot(Bones[2 + offset.w], r0);
    r0.xyz = (r1.w * r1) + r2;
    r0.w = const_0.x;
    OUT.position.w = dot(SkinModelViewProj[3], r0);
    r1.x = dot(SkinModelViewProj[0], r0);
    r1.y = dot(SkinModelViewProj[1], r0);
    r1.z = dot(SkinModelViewProj[2], r0);
    OUT.texcoord_1.x = dot(ObjToCubeSpace, r0);
    r2.x = dot(r1, r1);	// normalize + length
    OUT.texcoord_1.y = dot(const_9, r0);
    r1.w = 1.0 / sqrt(r2.x);
    OUT.texcoord_1.z = dot(const_10, r0);
    r1.w = 1.0 / r1.w;
    r1.w = FogParam.x - r1.w;
    r2.w = 1.0 / FogParam.y;
    OUT.texcoord_1.w = dot(const_11, r0);
    r0.w = r1.w * r2.w;
    OUT.texcoord_6.xyz = r0;
    r0.w = max(r0.w, const_0.z);
    OUT.position.xyz = r1;
    r0.w = min(r0.w, const_0.x);
    OUT.texcoord_3.w = const_0.x - r0.w;
    OUT.texcoord_0.xy = IN.texcoord_0;
    OUT.texcoord_2 = LightPosition[0];
    OUT.texcoord_3.xyz = const_0.z;

// approximately 46 instruction slots used
