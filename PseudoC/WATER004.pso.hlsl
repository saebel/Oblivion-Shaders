//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   psa shaderdump19/WATER004.pso /Fcshaderdump19/WATER004.pso.dis
//
//
// Parameters:
//
//   float4 DeepColor;
//   sampler2D DetailMap;
//   float4 EyePos;
//   float4 FogColor;
//   float4 FogParam;
//   float FresnelRI;
//   sampler2D NormalMap;
//   float4 ReflectionColor;
//   samplerCUBE ReflectionMap;
//   float2 Scroll;
//   float4 ShallowColor;
//   float4 VarAmounts;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Scroll          const_0       1
//   EyePos          const_1       1
//   ShallowColor    const_5       1
//   DeepColor       const_6       1
//   ReflectionColor const_7       1
//   VarAmounts      const_8       1
//   FogParam        const_9       1
//   FogColor        const_10      1
//   FresnelRI       const_11      1
//   ReflectionMap   texture_0       1
//   NormalMap       texture_1       1
//   DetailMap       texture_2       1
//

    const float4 const_2 = {0.1, 0, 0, 0};
    const float4 const_3 = {2, -1, 0, -(1.0 / 8192)};
    float3 texcoord_1 : TEXCOORD1_centroid;
    float2 texcoord_6 : TEXCOORD6;
    samplerCUBE ReflectionMap;
    sampler2D NormalMap;
    sampler2D DetailMap;
    r0.xy = EyePos.xy - IN.texcoord_1.xy;
    r0.w = dot(r0.xy, r0.xy);
    r0.w = 1.0 / sqrt(r0.w);
    r0.w = 1.0 / r0.w;
    r2.w = saturate((r0.w * -(1.0 / 8192)) - -1);
    r1.w = r2.w * r2.w;
    r3.xy = IN.texcoord_6.xy + Scroll.xy;
    r0.xyzw = tex2D(NormalMap, r3.xy);
    r2.xyz = (2 * r0.xyz) - 1;
    r2.xy = r1.w * r2.xy;
    r0.xyz = EyePos.xyz - IN.texcoord_1.xyz;
    r4.x = dot(r0.xyz, r0.xyz);	// normalize + length
    r1.xyz = normalize(r2.xyz);
    r1.w = 1.0 / sqrt(r4.x);
    r0.xyz = r0.xyz * r1.w;
    r3.w = r2.w * VarAmounts.w;
    r2.x = dot(r0.xyz, r1.xyz);
    r0.w = 2 * r2.x;
    r4.w = 1.0 / r1.w;
    r0.xyz = (-r0.w * r1.xyz) + r0.xyz;
    r5.w = saturate(r2.x);
    r2.xy = (0.1 * r1.xy) + r3.xy;
    r1.xyzw = texCUBE(ReflectionMap, r0.xyz);			// partial precision
    r0.xyzw = tex2D(DetailMap, r2.xy);
    r0.w = -(r5.w - 1);
    r3.z = -1;
    r2.xyz = ReflectionColor.rgb - r3.z;
    r1.w = r0.w * r0.w;
    r1.xyz = r1.xyz * r2.xyz;			// partial precision
    r1.w = r1.w * r1.w;
    r1.xyz = r1.xyz * ReflectionColor.rgb;
    r1.w = r0.w * r1.w;
    r1.xyz = r1.xyz * VarAmounts.y;
    r0.w = -(r3.z + FresnelRI.x);
    r2.w = (r0.w * r1.w) + FresnelRI.x;
    r2.xyz = DeepColor.rgb;
    r2.xyz = ShallowColor.rgb - r2.xyz;
    r2.xyz = (r5.w * r2.xyz) + DeepColor.rgb;			// partial precision
    r0.w = FogParam.x - r4.w;
    r2.xyz = saturate((r2.w * r1.xyz) + r2.xyz);
    r1.w = 1.0 / FogParam.y;
    r1.xyz = lerp(r2.xyz, r0.xyz, r3.w);
    r0.w = saturate(r0.w * r1.w);
    r0.xyz = FogColor.rgb - r1.xyz;
    r1.w = -(r0.w - 1);
    r0.w = max(VarAmounts.z, r2.w);
    r0.xyz = (r1.w * r0.xyz) + r1.xyz;
    OUT.color_0.rgba = r0.xyzw;

// approximately 51 instruction slots used (3 texture, 48 arithmetic)
