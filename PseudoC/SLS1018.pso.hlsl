//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/SLS1018.pso /Fcshaderdump19/SLS1018.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   sampler2D BaseMap;
//   sampler2D FaceGenMap;
//   sampler2D FaceGenMap2;
//   sampler2D NormalMap;
//   float4 PSLightColor[4];
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   AmbientColor const_1       1
//   PSLightColor[0] const_2        1
//   BaseMap      texture_0       1
//   NormalMap    texture_1       1
//   FaceGenMap   texture_2       1
//   FaceGenMap2  texture_3       1
//

    const float4 const_0 = {-0.5, 2, 0, 0};
    float2 texcoord_0 : TEXCOORD0;
    float2 texcoord_1 : TEXCOORD1;
    float2 texcoord_2 : TEXCOORD2;
    float2 texcoord_3 : TEXCOORD3;
    float3 IN.color_1 : COLOR1;
    float4 IN.color_0 : COLOR0;
    sampler2D BaseMap;
    sampler2D NormalMap;
    sampler2D FaceGenMap;
    sampler2D FaceGenMap2;
    r3 = tex2D(NormalMap, IN.texcoord_1);
    r2 = tex2D(FaceGenMap2, IN.texcoord_3);
    r1 = tex2D(FaceGenMap, IN.texcoord_2);
    r0 = tex2D(BaseMap, IN.texcoord_0);
    r3.xyz = r3 + const_0.x;
    r3.xyz = r3 + r3;
    r4.xyz = IN.color_1 + const_0.x;
    r4.xyz = r4 + r4;
    r4.x = saturate(dot(r3, r4));
    r3.xyz = PSLightColor[0];
    r3.xyz = saturate((r4.x * r3) + AmbientColor);
    r2.xyz = r2 + r2;
    r1.xyz = r1 + const_0.x;
    r0.xyz = (const_0.y * r1) + r0;
    r0.xyz = r2 * r0;
    r0.xyz = r0 + r0;
    r1.xyz = (-r0 * r3) + IN.color_0;
    r1.xyz = r1 * IN.color_0.a;
    r0.xyz = (r0 * r3) + r1;
    OUT.color_0 = r0;

// approximately 20 instruction slots used (4 texture, 16 arithmetic)
