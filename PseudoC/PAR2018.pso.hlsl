//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   vsa shaderdump19/PAR2018.pso /Fcshaderdump19/PAR2018.pso.dis
//
//
// Parameters:
//
//   float4 AmbientColor;
//   sampler2D AttenuationMap;
//   sampler2D BaseMap;
//   sampler2D NormalMap;
//   float4 PSLightColor[4];
//   sampler2D ShadowMap;
//   sampler2D ShadowMaskMap;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   AmbientColor   AmbientColor       1
//   PSLightColor   const_2       3
//   BaseMap        BaseMap       1
//   NormalMap      NormalMap       1
//   AttenuationMap AttenuationMap       1
//   ShadowMap      ShadowMap       1
//   ShadowMaskMap  ShadowMaskMap       1
//

    const_0 = {0.0399999991, -0.0199999996, -0.5, -1};
    texcoord input_0.xy;
    texcoord input_1.xyz;			// centroid
    texcoord input_2.xyz;			// centroid
    texcoord input_3.xyz;			// centroid
    texcoord input_4;
    texcoord input_5;
    texcoord input_7.xyz;			// centroid
    texcoord input_6;
    sampler BaseMap;
    sampler NormalMap;
    sampler AttenuationMap;
    sampler ShadowMap;
    sampler ShadowMaskMap;
    r0 = BaseMap[texcoord_0];			// partial precision
    r0.x = (texcoord_7.x * texcoord_7.x) + (texcoord_7.y * texcoord_7.y) + (texcoord_7.z * texcoord_7.z);			// partial precision
    r3.x = texcoord_4.z;
    r3.y = texcoord_4.w;
    r1.w = 1.0 / sqrt(r0.x);			// partial precision
    r0.xy = r1.w * texcoord_7;			// partial precision
    r0.w = (r0.w * const_0.x) - const_0.y;			// partial precision
    r2.xy = (r0.w * r0) + texcoord_0;
    r1.x = texcoord_6.z;
    r1.y = texcoord_6.w;
    r0.x = texcoord_5.z;
    r0.y = texcoord_5.w;
    r4 = AttenuationMap[r3];			// partial precision
    r5 = AttenuationMap[texcoord_4];			// partial precision
    r6 = NormalMap[r2];			// partial precision
    r2 = ShadowMaskMap[r1];			// partial precision
    r3 = ShadowMap[texcoord_6];			// partial precision
    r0 = AttenuationMap[r0];			// partial precision
    r1 = AttenuationMap[texcoord_5];			// partial precision
    r6.xyz = r6 - const_0.z;
    r7.xyz = r6 - r6;			// partial precision
    r6.xyz = norm(r7);			// partial precision
    r7.xyz = norm(texcoord_2);			// partial precision
    add r0.w, -r5.x, -const_0.w			// partial precision
    r5.x = sat((r6.x * r7.x) + (r6.y * r7.y) + (r6.z * r7.z));			// partial precision
    r0.w = sat(r0.w - r4.x);			// partial precision
    r4.xyz = r5.x * const_3;			// partial precision
    r4.xyz = r0.w * r4;			// partial precision
    r3.xyz = r3 - const_0.w;			// partial precision
    r3.xyz = (r2.x * r3) - const_0.w;			// partial precision
    r2.x = sat((r6.x * texcoord_1.x) + (r6.y * texcoord_1.y) + (r6.z * texcoord_1.z));			// partial precision
    r2.xyz = r2.x * const_2;			// partial precision
    r2.xyz = (r3 * r2) + r4;			// partial precision
    r3.xyz = norm(texcoord_3);			// partial precision
    add r0.w, -r1.x, -const_0.w			// partial precision
    r1.x = sat((r6.x * r3.x) + (r6.y * r3.y) + (r6.z * r3.z));			// partial precision
    r0.w = sat(r0.w - r0.x);			// partial precision
    r0.xyz = r1.x * const_4;			// partial precision
    r0.xyz = (r0.w * r0) + r2;			// partial precision
    r0.xyz = r0 - AmbientColor;			// partial precision
    r0.w = -const_0.w;
    rendertarget_0 = r0;			// partial precision

// approximately 48 instruction slots used (8 texture, 40 arithmetic)
